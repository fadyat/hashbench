<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>unsigned long const&amp; std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (159,943,936 samples, 0.16%)</title><rect x="794.1" y="357" width="2.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="797.15" y="367.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (40,382,359 samples, 0.04%)</title><rect x="474.2" y="309" width="0.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="477.19" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (39,938,828 samples, 0.04%)</title><rect x="55.3" y="389" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="58.25" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::HashSetIteratorGenerationInfoDisabled::generation_ptr (39,494,079 samples, 0.04%)</title><rect x="539.7" y="405" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="542.73" y="415.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::forward&lt;unsigned long const&amp;&gt; (40,339,815 samples, 0.04%)</title><rect x="468.8" y="325" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="471.83" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (561,584,482 samples, 0.58%)</title><rect x="362.9" y="421" width="6.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="365.90" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (40,182,123 samples, 0.04%)</title><rect x="1117.7" y="197" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1120.66" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::slot_array (80,275,743 samples, 0.08%)</title><rect x="684.0" y="261" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="687.03" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (563,045,488 samples, 0.58%)</title><rect x="258.8" y="229" width="6.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="261.83" y="239.5" ></text>
</g>
<g >
<title>std::locale::locale (120,717,790 samples, 0.12%)</title><rect x="910.0" y="485" width="1.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="913.05" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::AssertNotDebugCapacity (479,650,102 samples, 0.49%)</title><rect x="475.7" y="421" width="5.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="478.65" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (40,269,991 samples, 0.04%)</title><rect x="11.1" y="517" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="14.06" y="527.5" ></text>
</g>
<g >
<title>do_anonymous_page (80,694,737 samples, 0.08%)</title><rect x="1188.5" y="325" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1191.54" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (120,613,667 samples, 0.12%)</title><rect x="368.2" y="405" width="1.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="371.24" y="415.5" ></text>
</g>
<g >
<title>operator new (39,998,865 samples, 0.04%)</title><rect x="1188.1" y="485" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1191.05" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::control (919,927,018 samples, 0.94%)</title><rect x="749.6" y="309" width="11.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="752.55" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (39,610,402 samples, 0.04%)</title><rect x="971.2" y="405" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="974.22" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (40,238,246 samples, 0.04%)</title><rect x="1016.2" y="421" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1019.25" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::FindElement&amp;&amp; std::forward&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::FindElement&gt; (40,373,364 samples, 0.04%)</title><rect x="591.2" y="373" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="594.19" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (522,716,158 samples, 0.54%)</title><rect x="259.3" y="197" width="6.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="262.32" y="207.5" ></text>
</g>
<g >
<title>release_pages (38,895,119 samples, 0.04%)</title><rect x="349.8" y="69" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="352.78" y="79.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::slot_array (1,242,040,887 samples, 1.27%)</title><rect x="691.8" y="309" width="15.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="694.83" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (40,367,411 samples, 0.04%)</title><rect x="355.1" y="357" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="358.11" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (79,199,191 samples, 0.08%)</title><rect x="785.0" y="245" width="0.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="787.95" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::size (120,745,934 samples, 0.12%)</title><rect x="780.1" y="261" width="1.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="783.09" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (40,263,134 samples, 0.04%)</title><rect x="348.8" y="325" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="351.81" y="335.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (481,712,767 samples, 0.49%)</title><rect x="727.7" y="197" width="5.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="730.70" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (40,251,833 samples, 0.04%)</title><rect x="397.4" y="405" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="400.40" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt;::pair&lt;unsigned long const&amp;, 0ul, unsigned long const&amp;, 0ul&gt; (1,042,843,002 samples, 1.07%)</title><rect x="726.7" y="213" width="12.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="729.73" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::HashSetResizeHelper::old_capacity (160,234,012 samples, 0.16%)</title><rect x="136.8" y="389" width="1.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="139.81" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (80,548,525 samples, 0.08%)</title><rect x="397.9" y="389" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="400.89" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,027,394 samples, 0.04%)</title><rect x="227.7" y="357" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="230.71" y="367.5" ></text>
</g>
<g >
<title>operator new (120,553,979 samples, 0.12%)</title><rect x="1013.3" y="405" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1016.32" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,263,134 samples, 0.04%)</title><rect x="348.8" y="373" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="351.81" y="383.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_Head_base (40,354,506 samples, 0.04%)</title><rect x="329.9" y="261" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="332.86" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_read (6,438,409,824 samples, 6.61%)</title><rect x="1059.6" y="405" width="78.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1062.58" y="415.5" >__x64_sys..</text>
</g>
<g >
<title>_copy_to_iter (159,421,838 samples, 0.16%)</title><rect x="1067.3" y="293" width="1.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1070.31" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (40,216,278 samples, 0.04%)</title><rect x="1041.0" y="309" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1043.99" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (40,216,278 samples, 0.04%)</title><rect x="1041.0" y="357" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1043.99" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (40,324,893 samples, 0.04%)</title><rect x="648.5" y="277" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="651.53" y="287.5" ></text>
</g>
<g >
<title>clear_bhb_loop (80,284,372 samples, 0.08%)</title><rect x="1051.2" y="437" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1054.19" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::FindElement&amp;&amp; std::forward&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::FindElement&gt; (40,202,035 samples, 0.04%)</title><rect x="587.8" y="389" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="590.79" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::NonIterableBitMask&lt;unsigned short, 16, 0&gt;::HighestBitSet (40,290,952 samples, 0.04%)</title><rect x="194.1" y="373" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="197.14" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (201,159,260 samples, 0.21%)</title><rect x="432.4" y="389" width="2.4" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="435.40" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (80,192,362 samples, 0.08%)</title><rect x="963.5" y="453" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="966.46" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (79,905,531 samples, 0.08%)</title><rect x="427.0" y="373" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="430.05" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::find&lt;unsigned long&gt; (16,154,870,975 samples, 16.58%)</title><rect x="595.6" y="341" width="195.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="598.57" y="351.5" >absl::container_internal:..</text>
</g>
<g >
<title>absl::container_internal::GroupSse2Impl::Match (561,316,866 samples, 0.58%)</title><rect x="89.7" y="421" width="6.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="92.69" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (40,337,593 samples, 0.04%)</title><rect x="790.8" y="261" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="793.76" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (200,338,715 samples, 0.21%)</title><rect x="403.7" y="389" width="2.4" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="406.71" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::control (80,686,919 samples, 0.08%)</title><rect x="103.8" y="389" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="106.78" y="399.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (40,362,911 samples, 0.04%)</title><rect x="1187.6" y="341" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1190.56" y="351.5" ></text>
</g>
<g >
<title>malloc (40,323,085 samples, 0.04%)</title><rect x="892.1" y="437" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="895.12" y="447.5" ></text>
</g>
<g >
<title>dget_parent (40,118,721 samples, 0.04%)</title><rect x="1137.1" y="325" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1140.08" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (678,994,015 samples, 0.70%)</title><rect x="975.1" y="501" width="8.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="978.10" y="511.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt; std::forward_as_tuple&lt;unsigned long const&amp;&gt; (80,489,546 samples, 0.08%)</title><rect x="341.0" y="309" width="1.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="344.04" y="319.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (40,344,619 samples, 0.04%)</title><rect x="1188.5" y="309" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1191.54" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (359,844,683 samples, 0.37%)</title><rect x="490.7" y="405" width="4.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="493.69" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator_at (2,490,442,951 samples, 2.56%)</title><rect x="661.7" y="309" width="30.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="664.66" y="319.5" >ab..</text>
</g>
<g >
<title>zap_pte_range (40,088,862 samples, 0.04%)</title><rect x="23.2" y="181" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="26.21" y="191.5" ></text>
</g>
<g >
<title>char const* std::__addressof&lt;char const&gt; (39,414,258 samples, 0.04%)</title><rect x="1043.9" y="405" width="0.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1046.90" y="415.5" ></text>
</g>
<g >
<title>rw_verify_area (160,778,640 samples, 0.17%)</title><rect x="1135.6" y="357" width="2.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1138.61" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_S_relocate (120,941,654 samples, 0.12%)</title><rect x="1188.5" y="469" width="1.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1191.54" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (40,264,377 samples, 0.04%)</title><rect x="661.2" y="261" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="664.18" y="271.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (80,101,462 samples, 0.08%)</title><rect x="737.9" y="149" width="1.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="740.91" y="159.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (40,070,160 samples, 0.04%)</title><rect x="1020.1" y="421" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1023.12" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (200,872,590 samples, 0.21%)</title><rect x="155.3" y="357" width="2.4" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="158.28" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;unsigned long&gt;::operator (40,379,225 samples, 0.04%)</title><rect x="284.6" y="293" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="287.63" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (359,197,163 samples, 0.37%)</title><rect x="807.8" y="309" width="4.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="810.78" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (40,220,328 samples, 0.04%)</title><rect x="764.1" y="261" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="767.09" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::SetCtrl (1,767,400,287 samples, 1.81%)</title><rect x="199.0" y="357" width="21.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="202.00" y="367.5" >a..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (360,726,175 samples, 0.37%)</title><rect x="702.5" y="277" width="4.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="705.50" y="287.5" ></text>
</g>
<g >
<title>read (7,251,209,049 samples, 7.44%)</title><rect x="1050.2" y="469" width="87.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1053.22" y="479.5" >read</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (40,365,499 samples, 0.04%)</title><rect x="428.0" y="357" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="431.02" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (80,402,497 samples, 0.08%)</title><rect x="650.0" y="261" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="652.99" y="271.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (40,216,278 samples, 0.04%)</title><rect x="1041.0" y="277" width="0.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1043.99" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (40,365,499 samples, 0.04%)</title><rect x="428.0" y="373" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="431.02" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled_impl (40,264,377 samples, 0.04%)</title><rect x="661.2" y="245" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="664.18" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (40,336,099 samples, 0.04%)</title><rect x="42.1" y="453" width="0.5" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="45.14" y="463.5" ></text>
</g>
<g >
<title>exc_page_fault (40,362,911 samples, 0.04%)</title><rect x="1187.6" y="453" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1190.56" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (160,742,622 samples, 0.16%)</title><rect x="479.5" y="389" width="2.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="482.51" y="399.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::forward&lt;unsigned long const&amp;&gt; (40,189,370 samples, 0.04%)</title><rect x="825.7" y="341" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="828.74" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt;::pair&lt;unsigned long const&amp;, 0ul, unsigned long const&amp;, 0ul&gt; (39,984,159 samples, 0.04%)</title><rect x="293.9" y="293" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="296.88" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (321,344,576 samples, 0.33%)</title><rect x="1023.5" y="453" width="3.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1026.50" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::NonIterableBitMask&lt;unsigned short, 16, 0&gt;::HighestBitSet (40,363,845 samples, 0.04%)</title><rect x="97.0" y="421" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="99.97" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (240,899,773 samples, 0.25%)</title><rect x="670.9" y="261" width="2.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="673.89" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::AssertIsFull (441,819,270 samples, 0.45%)</title><rect x="542.1" y="421" width="5.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="545.15" y="431.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (38,895,119 samples, 0.04%)</title><rect x="349.8" y="101" width="0.4" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="352.78" y="111.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (362,214,076 samples, 0.37%)</title><rect x="324.0" y="277" width="4.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="327.02" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (40,382,359 samples, 0.04%)</title><rect x="474.2" y="357" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="477.19" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (80,534,606 samples, 0.08%)</title><rect x="763.6" y="277" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="766.60" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (40,016,770 samples, 0.04%)</title><rect x="1028.9" y="453" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1031.86" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (40,348,956 samples, 0.04%)</title><rect x="1018.2" y="421" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1021.17" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (79,887,102 samples, 0.08%)</title><rect x="48.9" y="437" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="51.94" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::HashSetIteratorGenerationInfoDisabled::HashSetIteratorGenerationInfoDisabled (40,031,653 samples, 0.04%)</title><rect x="680.1" y="277" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="683.15" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 1&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;1&gt; (40,197,297 samples, 0.04%)</title><rect x="600.4" y="309" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="603.45" y="319.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (40,326,121 samples, 0.04%)</title><rect x="1145.8" y="485" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1148.83" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::find_non_soo&lt;unsigned long&gt; (11,667,673,308 samples, 11.98%)</title><rect x="606.8" y="325" width="141.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="609.76" y="335.5" >absl::container_i..</text>
</g>
<g >
<title>absl::container_internal::GrowthInfo::GetGrowthLeft (80,507,174 samples, 0.08%)</title><rect x="115.4" y="389" width="1.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="118.45" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (200,139,734 samples, 0.21%)</title><rect x="56.2" y="421" width="2.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="59.22" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (40,051,836 samples, 0.04%)</title><rect x="510.1" y="341" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="513.11" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::GroupSse2Impl::GroupSse2Impl (280,374,132 samples, 0.29%)</title><rect x="157.7" y="357" width="3.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="160.71" y="367.5" ></text>
</g>
<g >
<title>void absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::AssertHashEqConsistent&lt;unsigned long&gt; (1,242,143,121 samples, 1.28%)</title><rect x="776.2" y="309" width="15.0" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="779.20" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (39,610,402 samples, 0.04%)</title><rect x="971.2" y="437" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="974.22" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (80,521,983 samples, 0.08%)</title><rect x="605.8" y="293" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="608.79" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (200,641,582 samples, 0.21%)</title><rect x="1005.6" y="453" width="2.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1008.64" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (40,364,771 samples, 0.04%)</title><rect x="503.3" y="341" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="506.33" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (161,369,252 samples, 0.17%)</title><rect x="281.7" y="277" width="2.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="284.70" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (40,374,010 samples, 0.04%)</title><rect x="645.6" y="293" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="648.62" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::HashSetResizeHelper::old_ctrl (80,551,164 samples, 0.08%)</title><rect x="138.7" y="389" width="1.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="141.75" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::SooCapacity (80,350,089 samples, 0.08%)</title><rect x="700.6" y="277" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="703.56" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::control (159,984,840 samples, 0.16%)</title><rect x="404.2" y="373" width="1.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="407.20" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::BitMask&lt;unsigned short, 16, 0, false&gt;::operator* (39,507,752 samples, 0.04%)</title><rect x="44.6" y="437" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="47.57" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (120,364,109 samples, 0.12%)</title><rect x="430.0" y="405" width="1.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="432.97" y="415.5" ></text>
</g>
<g >
<title>void absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;::construct&lt;std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (2,043,633,601 samples, 2.10%)</title><rect x="844.1" y="373" width="24.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="847.12" y="383.5" >v..</text>
</g>
<g >
<title>ktime_get_update_offsets_now (40,319,000 samples, 0.04%)</title><rect x="114.0" y="293" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="116.99" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt; absl::container_internal::PairArgs&lt;unsigned long const&amp;, unsigned long const&amp;&gt; (120,566,875 samples, 0.12%)</title><rect x="285.1" y="325" width="1.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="288.12" y="335.5" ></text>
</g>
<g >
<title>handle_pte_fault (522,716,158 samples, 0.54%)</title><rect x="259.3" y="181" width="6.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="262.32" y="191.5" ></text>
</g>
<g >
<title>vma_alloc_folio (40,350,118 samples, 0.04%)</title><rect x="1189.0" y="293" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.02" y="303.5" ></text>
</g>
<g >
<title>decltype  (3,402,735,811 samples, 3.49%)</title><rect x="706.9" y="309" width="41.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="709.87" y="319.5" >dec..</text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,190,187 samples, 0.04%)</title><rect x="434.8" y="389" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="437.84" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::SwisstableDebugEnabled (40,325,445 samples, 0.04%)</title><rect x="529.5" y="389" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="532.53" y="399.5" ></text>
</g>
<g >
<title>error_entry (40,375,097 samples, 0.04%)</title><rect x="265.6" y="261" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="268.65" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (40,216,278 samples, 0.04%)</title><rect x="1041.0" y="437" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1043.99" y="447.5" ></text>
</g>
<g >
<title>update_wall_time (40,382,791 samples, 0.04%)</title><rect x="269.1" y="133" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="272.07" y="143.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt;::pair&lt;unsigned long const&amp;, 0ul, unsigned long const&amp;, 0ul&gt; (279,769,748 samples, 0.29%)</title><rect x="462.5" y="325" width="3.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="465.53" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::H1 (40,274,403 samples, 0.04%)</title><rect x="186.9" y="325" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="189.86" y="335.5" ></text>
</g>
<g >
<title>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (12,773,285,655 samples, 13.11%)</title><rect x="985.3" y="501" width="154.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="988.28" y="511.5" >std::basic_istream&lt;..</text>
</g>
<g >
<title>absl::container_internal::NonIterableBitMask&lt;unsigned short, 16, 0&gt;::NonIterableBitMask (40,142,895 samples, 0.04%)</title><rect x="167.4" y="341" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="170.43" y="351.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (160,130,937 samples, 0.16%)</title><rect x="921.2" y="469" width="1.9" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="924.19" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::resize_impl (17,981,832,325 samples, 18.46%)</title><rect x="132.4" y="405" width="217.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="135.44" y="415.5" >absl::container_internal::ra..</text>
</g>
<g >
<title>absl::container_internal::GroupSse2Impl::GroupSse2Impl (999,616,002 samples, 1.03%)</title><rect x="69.8" y="421" width="12.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="72.81" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (80,462,788 samples, 0.08%)</title><rect x="685.5" y="277" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="688.49" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (40,319,000 samples, 0.04%)</title><rect x="114.0" y="341" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="116.99" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (40,216,278 samples, 0.04%)</title><rect x="1041.0" y="389" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1043.99" y="399.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::forward&lt;unsigned long const&amp;&gt; (39,864,374 samples, 0.04%)</title><rect x="738.9" y="197" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="741.88" y="207.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::tuple&lt;unsigned long const&amp;&gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::tuple&lt;unsigned long const&amp;&gt;&amp;&gt; (40,302,488 samples, 0.04%)</title><rect x="826.7" y="389" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="829.69" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (39,786,426 samples, 0.04%)</title><rect x="228.7" y="325" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="231.68" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; read_tsv_column&lt;unsigned long&gt; (26,432,313,541 samples, 27.13%)</title><rect x="869.8" y="517" width="320.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="872.84" y="527.5" >std::vector&lt;unsigned long, std::allocator&lt;u..</text>
</g>
<g >
<title>tick_sched_handle (40,283,379 samples, 0.04%)</title><rect x="651.0" y="181" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="653.96" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (200,357,333 samples, 0.21%)</title><rect x="421.2" y="389" width="2.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="424.21" y="399.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (40,284,098 samples, 0.04%)</title><rect x="465.4" y="309" width="0.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="468.43" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 1&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;1&gt; (40,282,540 samples, 0.04%)</title><rect x="503.8" y="389" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="506.82" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (160,614,754 samples, 0.16%)</title><rect x="377.5" y="389" width="1.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="380.47" y="399.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned long const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned long const&amp;&gt; (159,943,936 samples, 0.16%)</title><rect x="794.1" y="373" width="2.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="797.15" y="383.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (280,659,723 samples, 0.29%)</title><rect x="1142.9" y="501" width="3.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1145.91" y="511.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (317,968,806 samples, 0.33%)</title><rect x="958.2" y="469" width="3.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="961.16" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (119,864,479 samples, 0.12%)</title><rect x="667.5" y="277" width="1.5" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="670.51" y="287.5" ></text>
</g>
<g >
<title>operator new (360,864,341 samples, 0.37%)</title><rect x="951.8" y="437" width="4.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="954.84" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (201,045,654 samples, 0.21%)</title><rect x="604.3" y="309" width="2.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="607.33" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (40,370,712 samples, 0.04%)</title><rect x="370.7" y="389" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="373.67" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (79,575,284 samples, 0.08%)</title><rect x="492.1" y="389" width="1.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="495.15" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,342,294 samples, 0.04%)</title><rect x="499.4" y="341" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="502.43" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (39,913,848 samples, 0.04%)</title><rect x="55.7" y="421" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="58.74" y="431.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (40,343,182 samples, 0.04%)</title><rect x="1184.6" y="501" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1187.64" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (40,287,140 samples, 0.04%)</title><rect x="449.9" y="373" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="452.91" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::map_slot_policy&lt;unsigned long, unsigned long&gt;::emplace (201,099,338 samples, 0.21%)</title><rect x="250.6" y="277" width="2.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="253.56" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,379,132 samples, 0.04%)</title><rect x="751.5" y="293" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="754.50" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt;::pair&lt;unsigned long const&amp;, unsigned long const&amp;&gt; (2,127,067,775 samples, 2.18%)</title><rect x="294.4" y="293" width="25.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="297.36" y="303.5" >s..</text>
</g>
<g >
<title>decltype  (5,941,520,319 samples, 6.10%)</title><rect x="275.4" y="357" width="71.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="278.38" y="367.5" >decltype </text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (39,822,419 samples, 0.04%)</title><rect x="645.1" y="293" width="0.5" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="648.14" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::BitMask&lt;unsigned short, 16, 0, false&gt;::end (79,779,919 samples, 0.08%)</title><rect x="615.0" y="309" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="618.04" y="319.5" ></text>
</g>
<g >
<title>cfree (321,022,796 samples, 0.33%)</title><rect x="979.0" y="485" width="3.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="981.97" y="495.5" ></text>
</g>
<g >
<title>x64_sys_call (80,356,319 samples, 0.08%)</title><rect x="22.7" y="341" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="25.72" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::IsFull (40,202,676 samples, 0.04%)</title><rect x="217.5" y="325" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="220.48" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled_impl (40,085,668 samples, 0.04%)</title><rect x="391.1" y="357" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="394.09" y="367.5" ></text>
</g>
<g >
<title>__vm_munmap (80,356,319 samples, 0.08%)</title><rect x="22.7" y="309" width="1.0" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="25.72" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (278,525,956 samples, 0.29%)</title><rect x="936.8" y="453" width="3.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="939.81" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (40,380,376 samples, 0.04%)</title><rect x="360.5" y="405" width="0.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="363.47" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (79,816,833 samples, 0.08%)</title><rect x="228.2" y="341" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="231.19" y="351.5" ></text>
</g>
<g >
<title>exc_page_fault (80,694,737 samples, 0.08%)</title><rect x="1188.5" y="405" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1191.54" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::AssertNotDebugCapacity (39,139,866 samples, 0.04%)</title><rect x="48.5" y="437" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="51.46" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;std::hash&lt;unsigned long&gt;, 1ul, true&gt;::get (39,645,233 samples, 0.04%)</title><rect x="392.5" y="389" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="395.54" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (160,765,598 samples, 0.17%)</title><rect x="743.2" y="197" width="2.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="746.22" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (40,382,791 samples, 0.04%)</title><rect x="269.1" y="229" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="272.07" y="239.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (724,342,668 samples, 0.74%)</title><rect x="256.9" y="261" width="8.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="259.87" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;std::equal_to&lt;unsigned long&gt;, 2ul, true&gt;::get (39,583,932 samples, 0.04%)</title><rect x="653.4" y="277" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="656.39" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (80,664,662 samples, 0.08%)</title><rect x="673.8" y="261" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="676.81" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (39,975,975 samples, 0.04%)</title><rect x="777.7" y="293" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="780.67" y="303.5" ></text>
</g>
<g >
<title>char const* std::addressof&lt;char const&gt; (80,400,051 samples, 0.08%)</title><rect x="1025.5" y="389" width="0.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1028.46" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (160,982,774 samples, 0.17%)</title><rect x="481.9" y="421" width="2.0" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="484.95" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (40,378,198 samples, 0.04%)</title><rect x="389.6" y="373" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="392.63" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::H1 (39,609,172 samples, 0.04%)</title><rect x="357.6" y="389" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="360.55" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt; absl::container_internal::PairArgs&lt;unsigned long const&amp;, unsigned long const&amp;&gt; (4,215,024,885 samples, 4.33%)</title><rect x="289.5" y="309" width="51.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="292.50" y="319.5" >std::..</text>
</g>
<g >
<title>x64_sys_call (78,607,622 samples, 0.08%)</title><rect x="349.3" y="293" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="352.30" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (40,051,836 samples, 0.04%)</title><rect x="510.1" y="373" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="513.11" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::const_iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::FindElement::operator (16,677,396,159 samples, 17.12%)</title><rect x="591.7" y="373" width="202.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="594.68" y="383.5" >absl::container_internal::..</text>
</g>
<g >
<title>perf_event_task_tick (40,367,411 samples, 0.04%)</title><rect x="355.1" y="261" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="358.11" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (159,322,312 samples, 0.16%)</title><rect x="669.0" y="277" width="1.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="671.96" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt; absl::container_internal::PairArgs&lt;unsigned long const&amp;, unsigned long const&amp;&gt; (681,125,641 samples, 0.70%)</title><rect x="461.6" y="357" width="8.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="464.55" y="367.5" ></text>
</g>
<g >
<title>do_anonymous_page (522,716,158 samples, 0.54%)</title><rect x="259.3" y="165" width="6.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="262.32" y="175.5" ></text>
</g>
<g >
<title>alloc_anon_folio (40,350,118 samples, 0.04%)</title><rect x="1189.0" y="309" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1192.02" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::offset (279,404,137 samples, 0.29%)</title><rect x="189.8" y="357" width="3.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="192.78" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt;::pair&lt;unsigned long const&amp;, 0ul, unsigned long const&amp;, 0ul&gt; (1,805,722,486 samples, 1.85%)</title><rect x="294.9" y="277" width="21.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="297.85" y="287.5" >s..</text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,084,345 samples, 0.04%)</title><rect x="129.5" y="357" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="132.52" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (201,337,873 samples, 0.21%)</title><rect x="659.2" y="293" width="2.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="662.23" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::AssertNotDebugCapacity (600,508,862 samples, 0.62%)</title><rect x="766.5" y="309" width="7.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="769.53" y="319.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (40,382,791 samples, 0.04%)</title><rect x="269.1" y="149" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="272.07" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;::element (40,257,205 samples, 0.04%)</title><rect x="274.9" y="357" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="277.90" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (160,904,825 samples, 0.17%)</title><rect x="442.1" y="357" width="2.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="445.12" y="367.5" ></text>
</g>
<g >
<title>void absl::container_internal::Deallocate&lt;8ul, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt; (80,356,319 samples, 0.08%)</title><rect x="22.7" y="421" width="1.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="25.72" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::probe (240,777,456 samples, 0.25%)</title><rect x="357.6" y="405" width="2.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="360.55" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::slot_array (80,332,791 samples, 0.08%)</title><rect x="694.7" y="277" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="697.74" y="287.5" ></text>
</g>
<g >
<title>update_process_times (40,182,123 samples, 0.04%)</title><rect x="1117.7" y="165" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1120.66" y="175.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (80,345,320 samples, 0.08%)</title><rect x="674.8" y="261" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="677.79" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (321,951,868 samples, 0.33%)</title><rect x="1186.1" y="501" width="3.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1189.10" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::hash_ref (160,300,987 samples, 0.16%)</title><rect x="223.8" y="373" width="2.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="226.81" y="383.5" ></text>
</g>
<g >
<title>void absl::container_internal::CommonFields::RunWithReentrancyGuard&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::transfer (40,322,091 samples, 0.04%)</title><rect x="348.3" y="373" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="351.32" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (360,487,038 samples, 0.37%)</title><rect x="768.9" y="293" width="4.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="771.95" y="303.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::fail (39,563,249 samples, 0.04%)</title><rect x="12.0" y="517" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="15.03" y="527.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (78,856,546 samples, 0.08%)</title><rect x="439.7" y="357" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="442.70" y="367.5" ></text>
</g>
<g >
<title>decltype  (80,628,195 samples, 0.08%)</title><rect x="765.1" y="325" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="768.06" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt;::pair&lt;unsigned long const&amp;, 0ul, unsigned long const&amp;, 0ul&gt; (40,322,793 samples, 0.04%)</title><rect x="726.2" y="229" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="729.24" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,216,195 samples, 0.04%)</title><rect x="703.5" y="261" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="706.48" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,117,738,040 samples, 1.15%)</title><rect x="870.3" y="501" width="13.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="873.32" y="511.5" ></text>
</g>
<g >
<title>perf_event_task_tick (40,051,836 samples, 0.04%)</title><rect x="510.1" y="245" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="513.11" y="255.5" ></text>
</g>
<g >
<title>malloc (80,371,314 samples, 0.08%)</title><rect x="893.1" y="421" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="896.08" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (80,157,693 samples, 0.08%)</title><rect x="701.5" y="277" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="704.53" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (279,778,677 samples, 0.29%)</title><rect x="822.3" y="341" width="3.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="825.35" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::EqualElement&lt;unsigned long&gt;&amp;&amp; std::forward&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::EqualElement&lt;unsigned long&gt; &gt; (119,750,311 samples, 0.12%)</title><rect x="710.7" y="261" width="1.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="713.75" y="271.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple (80,512,974 samples, 0.08%)</title><rect x="865.5" y="325" width="0.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="868.47" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::empty (640,730,252 samples, 0.66%)</title><rect x="778.6" y="293" width="7.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="781.64" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (40,213,581 samples, 0.04%)</title><rect x="752.5" y="261" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="755.48" y="271.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (1,321,070,202 samples, 1.36%)</title><rect x="1119.1" y="293" width="16.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1122.13" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (402,109,827 samples, 0.41%)</title><rect x="330.3" y="261" width="4.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="333.35" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator, bool&gt; absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::try_emplace_impl&lt;unsigned long const&amp;&gt; (68,614,840,155 samples, 70.43%)</title><rect x="37.8" y="469" width="831.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="40.78" y="479.5" >std::pair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigne..</text>
</g>
<g >
<title>tick_sched_handle (40,051,836 samples, 0.04%)</title><rect x="510.1" y="293" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="513.11" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFieldsGenerationInfoDisabled::generation_ptr (40,020,360 samples, 0.04%)</title><rect x="69.3" y="421" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="72.33" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_Head_base (120,110,265 samples, 0.12%)</title><rect x="305.5" y="229" width="1.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="308.54" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (119,566,735 samples, 0.12%)</title><rect x="785.0" y="261" width="1.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="787.95" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (39,421,912 samples, 0.04%)</title><rect x="672.4" y="245" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="675.36" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (40,382,791 samples, 0.04%)</title><rect x="269.1" y="245" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="272.07" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (561,634,383 samples, 0.58%)</title><rect x="949.4" y="469" width="6.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="952.41" y="479.5" ></text>
</g>
<g >
<title>decltype  (17,196,996,196 samples, 17.65%)</title><rect x="588.3" y="389" width="208.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="591.28" y="399.5" >decltype </text>
</g>
<g >
<title>update_process_times (40,051,836 samples, 0.04%)</title><rect x="510.1" y="277" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="513.11" y="287.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (39,978,445 samples, 0.04%)</title><rect x="1062.9" y="325" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1065.94" y="335.5" ></text>
</g>
<g >
<title>cfree (160,601,853 samples, 0.16%)</title><rect x="912.0" y="485" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="915.00" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::size (600,396,896 samples, 0.62%)</title><rect x="779.1" y="277" width="7.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="782.13" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (80,526,490 samples, 0.08%)</title><rect x="1117.7" y="245" width="0.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1120.66" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (40,376,000 samples, 0.04%)</title><rect x="426.6" y="357" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="429.56" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages (40,350,118 samples, 0.04%)</title><rect x="1189.0" y="261" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.02" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (241,721,242 samples, 0.25%)</title><rect x="761.7" y="293" width="2.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="764.65" y="303.5" ></text>
</g>
<g >
<title>decltype  (562,651,929 samples, 0.58%)</title><rect x="278.3" y="325" width="6.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="281.30" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::SanitizerUnpoisonMemoryRegion (80,203,759 samples, 0.08%)</title><rect x="219.4" y="341" width="1.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="222.43" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (200,317,522 samples, 0.21%)</title><rect x="782.5" y="245" width="2.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="785.53" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (442,922,470 samples, 0.45%)</title><rect x="408.6" y="389" width="5.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="411.58" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (161,264,564 samples, 0.17%)</title><rect x="1014.8" y="437" width="1.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1017.78" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (201,168,284 samples, 0.21%)</title><rect x="358.0" y="389" width="2.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="361.03" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator_at (2,447,117,090 samples, 2.51%)</title><rect x="398.9" y="421" width="29.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="401.87" y="431.5" >ab..</text>
</g>
<g >
<title>absl::container_internal::operator!= (39,094,155 samples, 0.04%)</title><rect x="632.0" y="309" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="635.04" y="319.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (80,400,051 samples, 0.08%)</title><rect x="1025.5" y="405" width="0.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1028.46" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (40,157,061 samples, 0.04%)</title><rect x="706.4" y="245" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="709.39" y="255.5" ></text>
</g>
<g >
<title>handle_pte_fault (80,694,737 samples, 0.08%)</title><rect x="1188.5" y="341" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1191.54" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::transfer (40,293,084 samples, 0.04%)</title><rect x="229.2" y="357" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="232.16" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::slot_array (39,783,289 samples, 0.04%)</title><rect x="697.2" y="293" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="700.17" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::slot_array (160,635,323 samples, 0.16%)</title><rect x="448.9" y="421" width="2.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="451.93" y="431.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned long const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned long const&amp;&gt; (40,193,484 samples, 0.04%)</title><rect x="319.6" y="277" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="322.64" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;(anonymous namespace)::AggregationStats, std::default_delete&lt;(anonymous namespace)::AggregationStats&gt; &gt; (anonymous namespace)::aggregation_test&lt;unsigned long, absl::flat_hash_map&lt;unsigned long, unsigned long, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, main::{lambda (70,659,639,226 samples, 72.53%)</title><rect x="14.0" y="517" width="855.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="16.98" y="527.5" >std::unique_ptr&lt;(anonymous namespace)::AggregationStats, std::default_delete&lt;(anonymous namespace)::AggregationStats&gt; ..</text>
</g>
<g >
<title>absl::container_internal::IsValidCapacity (80,584,583 samples, 0.08%)</title><rect x="237.9" y="325" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="240.92" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (40,319,000 samples, 0.04%)</title><rect x="114.0" y="357" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="116.99" y="367.5" ></text>
</g>
<g >
<title>vma_alloc_folio (40,263,134 samples, 0.04%)</title><rect x="348.8" y="229" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="351.81" y="239.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;&amp;&amp; std::forward&lt;std::tuple&lt;unsigned long const&amp;&gt; &gt; (80,115,962 samples, 0.08%)</title><rect x="843.1" y="373" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="846.15" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (360,597,693 samples, 0.37%)</title><rect x="754.4" y="277" width="4.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="757.39" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,374,563 samples, 0.04%)</title><rect x="52.3" y="421" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="55.35" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,201,505 samples, 0.04%)</title><rect x="703.0" y="261" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="705.99" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::FindInfo absl::container_internal::find_first_non_full&lt;void&gt; (38,980,107 samples, 0.04%)</title><rect x="136.3" y="389" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="139.34" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (200,239,601 samples, 0.21%)</title><rect x="187.4" y="325" width="2.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="190.35" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt; absl::container_internal::PairArgs&lt;unsigned long const, unsigned long&gt; (2,486,579,918 samples, 2.55%)</title><rect x="796.6" y="389" width="30.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="799.57" y="399.5" >st..</text>
</g>
<g >
<title>absl::container_internal::IsValidCapacity (80,686,756 samples, 0.08%)</title><rect x="833.5" y="389" width="0.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="836.47" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (80,345,320 samples, 0.08%)</title><rect x="674.8" y="245" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="677.79" y="255.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (161,252,737 samples, 0.17%)</title><rect x="904.7" y="469" width="2.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="907.75" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (40,091,005 samples, 0.04%)</title><rect x="441.6" y="357" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="444.63" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (40,096,473 samples, 0.04%)</title><rect x="437.3" y="389" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="440.27" y="399.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned long const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned long const&amp;&gt; (80,508,218 samples, 0.08%)</title><rect x="343.9" y="325" width="1.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="346.95" y="335.5" ></text>
</g>
<g >
<title>touch_atime (39,952,344 samples, 0.04%)</title><rect x="1135.1" y="309" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1138.13" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (281,635,206 samples, 0.29%)</title><rect x="440.7" y="373" width="3.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="443.65" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (120,140,053 samples, 0.12%)</title><rect x="395.9" y="405" width="1.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="398.95" y="415.5" ></text>
</g>
<g >
<title>filemap_get_pages (1,361,385,204 samples, 1.40%)</title><rect x="1118.6" y="309" width="16.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1121.64" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 3&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;3&gt; (39,463,215 samples, 0.04%)</title><rect x="837.8" y="373" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="840.84" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (80,506,285 samples, 0.08%)</title><rect x="502.8" y="357" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="505.85" y="367.5" ></text>
</g>
<g >
<title>clear_page_erms (40,263,134 samples, 0.04%)</title><rect x="348.8" y="165" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="351.81" y="175.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (120,414,164 samples, 0.12%)</title><rect x="647.1" y="261" width="1.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="650.07" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1,406,620,011 samples, 1.44%)</title><rect x="927.0" y="501" width="17.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="930.01" y="511.5" ></text>
</g>
<g >
<title>exc_page_fault (563,045,488 samples, 0.58%)</title><rect x="258.8" y="245" width="6.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="261.83" y="255.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (78,607,622 samples, 0.08%)</title><rect x="349.3" y="229" width="0.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="352.30" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (80,694,737 samples, 0.08%)</title><rect x="1188.5" y="373" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1191.54" y="383.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::tuple&lt;unsigned long const&amp;&gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::tuple&lt;unsigned long const&amp;&gt;&amp;&gt; (40,365,112 samples, 0.04%)</title><rect x="460.1" y="357" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="463.11" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (40,330,787 samples, 0.04%)</title><rect x="11.5" y="517" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="14.55" y="527.5" ></text>
</g>
<g >
<title>char const* std::__addressof&lt;char const&gt; (40,354,816 samples, 0.04%)</title><rect x="1019.6" y="373" width="0.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1022.63" y="383.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned long const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned long const&amp;&gt; (321,168,203 samples, 0.33%)</title><rect x="812.1" y="325" width="3.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="815.13" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (40,277,263 samples, 0.04%)</title><rect x="689.9" y="245" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="692.88" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::growth_info (561,626,595 samples, 0.58%)</title><rect x="104.8" y="405" width="6.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="107.76" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::H1 (40,191,744 samples, 0.04%)</title><rect x="634.4" y="293" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="637.44" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::eq_ref (199,520,579 samples, 0.20%)</title><rect x="651.5" y="309" width="2.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="654.45" y="319.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (40,346,475 samples, 0.04%)</title><rect x="956.2" y="469" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="959.21" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (201,477,840 samples, 0.21%)</title><rect x="664.1" y="293" width="2.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="667.11" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::GroupSse2Impl::GroupSse2Impl (40,363,556 samples, 0.04%)</title><rect x="193.6" y="373" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="196.65" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::slot_array (924,465,935 samples, 0.95%)</title><rect x="680.6" y="293" width="11.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="683.63" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::set_capacity (121,056,707 samples, 0.12%)</title><rect x="833.0" y="405" width="1.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="835.98" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (78,607,622 samples, 0.08%)</title><rect x="349.3" y="277" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="352.30" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;std::hash&lt;unsigned long&gt;, 1ul, true&gt;::get (39,280,540 samples, 0.04%)</title><rect x="225.3" y="357" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="228.28" y="367.5" ></text>
</g>
<g >
<title>int std::__countr_zero&lt;unsigned short&gt; (80,709,578 samples, 0.08%)</title><rect x="618.0" y="245" width="0.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="620.95" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (721,779,586 samples, 0.74%)</title><rect x="918.3" y="501" width="8.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="921.27" y="511.5" ></text>
</g>
<g >
<title>std::hash&lt;unsigned long&gt;::operator (40,310,962 samples, 0.04%)</title><rect x="470.3" y="421" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="473.29" y="431.5" ></text>
</g>
<g >
<title>std::locale::locale (159,627,457 samples, 0.16%)</title><rect x="906.7" y="469" width="1.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="909.70" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (280,552,742 samples, 0.29%)</title><rect x="730.1" y="181" width="3.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="733.14" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::EqualElement&lt;unsigned long&gt;&amp;&amp; std::forward&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::EqualElement&lt;unsigned long&gt; &gt; (40,146,172 samples, 0.04%)</title><rect x="450.9" y="405" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="453.88" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator&amp;&amp; std::forward&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator&gt; (40,274,693 samples, 0.04%)</title><rect x="473.7" y="405" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="476.70" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (39,868,040 samples, 0.04%)</title><rect x="815.5" y="277" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="818.54" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::SetCtrl (723,129,560 samples, 0.74%)</title><rect x="123.7" y="405" width="8.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="126.69" y="415.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (319,427,591 samples, 0.33%)</title><rect x="512.5" y="437" width="3.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="515.54" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (76,658,561 samples, 0.08%)</title><rect x="864.5" y="245" width="1.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="867.54" y="255.5" ></text>
</g>
<g >
<title>operator new (40,208,847 samples, 0.04%)</title><rect x="854.3" y="325" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="857.31" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::SooCapacity (39,984,143 samples, 0.04%)</title><rect x="423.6" y="373" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="426.64" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::offset (40,367,518 samples, 0.04%)</title><rect x="597.0" y="325" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="600.04" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::control (40,340,485 samples, 0.04%)</title><rect x="357.1" y="389" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="360.06" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (40,351,085 samples, 0.04%)</title><rect x="280.2" y="293" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="283.24" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::find&lt;unsigned long&gt; (40,363,255 samples, 0.04%)</title><rect x="793.2" y="357" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="796.19" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::control (79,541,439 samples, 0.08%)</title><rect x="376.0" y="389" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="379.02" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (586,266,351 samples, 0.60%)</title><rect x="933.1" y="469" width="7.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="936.09" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (39,292,053 samples, 0.04%)</title><rect x="772.8" y="261" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="775.84" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::alloc_ref (118,285,683 samples, 0.12%)</title><rect x="837.4" y="389" width="1.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="840.35" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::empty (79,703,617 samples, 0.08%)</title><rect x="774.8" y="309" width="0.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="777.77" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::NonIterableBitMask&lt;unsigned short, 16, 0&gt;::LowestBitSet (40,056,432 samples, 0.04%)</title><rect x="46.0" y="437" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="49.03" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::const_iterator::const_iterator (40,346,092 samples, 0.04%)</title><rect x="41.7" y="453" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="44.65" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (240,057,875 samples, 0.25%)</title><rect x="704.0" y="261" width="2.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="706.97" y="271.5" ></text>
</g>
<g >
<title>absl::flat_hash_map&lt;unsigned long, unsigned long, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::~flat_hash_map (80,356,319 samples, 0.08%)</title><rect x="22.7" y="501" width="1.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="25.72" y="511.5" ></text>
</g>
<g >
<title>decltype  (802,539,152 samples, 0.82%)</title><rect x="451.4" y="373" width="9.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="454.36" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (40,193,526 samples, 0.04%)</title><rect x="895.5" y="485" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="898.51" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (39,893,636 samples, 0.04%)</title><rect x="895.0" y="453" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="898.03" y="463.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (40,319,000 samples, 0.04%)</title><rect x="114.0" y="325" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="116.99" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::BitMask&lt;unsigned short, 16, 0, false&gt;::operator* (241,248,055 samples, 0.25%)</title><rect x="616.0" y="309" width="2.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="619.01" y="319.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (241,518,485 samples, 0.25%)</title><rect x="280.7" y="293" width="3.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="283.73" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::IsFull (161,164,980 samples, 0.17%)</title><rect x="545.1" y="405" width="1.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="548.07" y="415.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::forward&lt;unsigned long const&amp;&gt; (80,443,102 samples, 0.08%)</title><rect x="342.0" y="309" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="345.01" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (158,747,718 samples, 0.16%)</title><rect x="438.7" y="373" width="2.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="441.73" y="383.5" ></text>
</g>
<g >
<title>auto absl::container_internal::map_slot_policy&lt;unsigned long, unsigned long&gt;::transfer&lt;std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt; (38,320,025 samples, 0.04%)</title><rect x="269.6" y="293" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="272.55" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (79,668,247 samples, 0.08%)</title><rect x="772.4" y="277" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="775.35" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (80,321,651 samples, 0.08%)</title><rect x="913.9" y="501" width="1.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="916.94" y="511.5" ></text>
</g>
<g >
<title>__xas_next (39,760,626 samples, 0.04%)</title><rect x="1131.3" y="277" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1134.25" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::slot_array (120,754,309 samples, 0.12%)</title><rect x="418.8" y="373" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="421.77" y="383.5" ></text>
</g>
<g >
<title>std::locale::~locale (40,096,050 samples, 0.04%)</title><rect x="909.1" y="469" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="912.12" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::EmptyGroup (40,116,894 samples, 0.04%)</title><rect x="539.2" y="405" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="542.25" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (2,522,907,961 samples, 2.59%)</title><rect x="944.5" y="501" width="30.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="947.54" y="511.5" >st..</text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt; std::forward_as_tuple&lt;unsigned long const&amp;&gt; (521,092,942 samples, 0.53%)</title><rect x="819.9" y="357" width="6.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="822.91" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (80,694,737 samples, 0.08%)</title><rect x="1188.5" y="357" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1191.54" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,376,000 samples, 0.04%)</title><rect x="426.6" y="341" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="429.56" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::AssertNotDebugCapacity (40,365,304 samples, 0.04%)</title><rect x="597.5" y="325" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="600.52" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (40,182,123 samples, 0.04%)</title><rect x="1117.7" y="181" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1120.66" y="191.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (40,013,777 samples, 0.04%)</title><rect x="261.3" y="133" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="264.27" y="143.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (199,446,083 samples, 0.20%)</title><rect x="823.3" y="325" width="2.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="826.32" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::AreItersFromSameContainer (401,241,112 samples, 0.41%)</title><rect x="533.4" y="389" width="4.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="536.42" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (79,958,452 samples, 0.08%)</title><rect x="601.9" y="293" width="1.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="604.91" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (80,630,034 samples, 0.08%)</title><rect x="1016.7" y="453" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1019.73" y="463.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (40,382,359 samples, 0.04%)</title><rect x="474.2" y="293" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="477.19" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (40,104,548 samples, 0.04%)</title><rect x="265.2" y="117" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="268.16" y="127.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (40,264,376 samples, 0.04%)</title><rect x="1027.4" y="453" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1030.40" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::transfer (3,775,070,336 samples, 3.88%)</title><rect x="225.8" y="373" width="45.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="228.75" y="383.5" >absl..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (40,148,714 samples, 0.04%)</title><rect x="902.3" y="453" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="905.32" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::unchecked_deref (239,587,358 samples, 0.25%)</title><rect x="31.0" y="485" width="2.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="33.99" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_istringstream (2,243,195,569 samples, 2.30%)</title><rect x="884.3" y="501" width="27.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="887.34" y="511.5" >s..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator::iterator (241,221,651 samples, 0.25%)</title><rect x="677.7" y="293" width="2.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="680.71" y="303.5" ></text>
</g>
<g >
<title>free_unref_page_list (38,895,119 samples, 0.04%)</title><rect x="349.8" y="53" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="352.78" y="63.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (40,283,379 samples, 0.04%)</title><rect x="651.0" y="117" width="0.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="653.96" y="127.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt; std::forward_as_tuple&lt;unsigned long const&amp;&gt; (240,814,962 samples, 0.25%)</title><rect x="466.4" y="341" width="2.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="469.40" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::NonIterableBitMask&lt;unsigned short, 16, 0&gt;::HighestBitSet (40,355,137 samples, 0.04%)</title><rect x="45.5" y="437" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="48.54" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::eq_ref (120,799,586 samples, 0.12%)</title><rect x="598.0" y="325" width="1.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="601.01" y="335.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (38,895,119 samples, 0.04%)</title><rect x="349.8" y="117" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="352.78" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (160,385,544 samples, 0.16%)</title><rect x="919.2" y="485" width="2.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="922.24" y="495.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (39,712,503 samples, 0.04%)</title><rect x="349.3" y="197" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="352.30" y="207.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (39,920,216 samples, 0.04%)</title><rect x="464.9" y="277" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="467.95" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (40,304,475 samples, 0.04%)</title><rect x="685.0" y="277" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="688.01" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (238,967,826 samples, 0.25%)</title><rect x="1017.7" y="437" width="2.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1020.71" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,374,389 samples, 0.04%)</title><rect x="395.5" y="405" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="398.46" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (239,362,845 samples, 0.25%)</title><rect x="1020.6" y="453" width="2.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1023.61" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (40,051,836 samples, 0.04%)</title><rect x="510.1" y="389" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="513.11" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (40,378,368 samples, 0.04%)</title><rect x="50.9" y="437" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="53.88" y="447.5" ></text>
</g>
<g >
<title>__update_load_avg_se (40,182,123 samples, 0.04%)</title><rect x="1117.7" y="101" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1120.66" y="111.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (40,180,108 samples, 0.04%)</title><rect x="778.2" y="293" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="781.15" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::BitMask&lt;unsigned short, 16, 0, false&gt;::BitMask (38,460,390 samples, 0.04%)</title><rect x="67.4" y="405" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="70.40" y="415.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt; std::forward_as_tuple&lt;unsigned long const&amp;&gt; (39,549,393 samples, 0.04%)</title><rect x="868.9" y="469" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="871.87" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::probe (320,855,616 samples, 0.33%)</title><rect x="185.9" y="341" width="3.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="188.89" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (439,860,934 samples, 0.45%)</title><rect x="476.1" y="405" width="5.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="479.13" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (119,888,357 samples, 0.12%)</title><rect x="831.5" y="405" width="1.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="834.53" y="415.5" ></text>
</g>
<g >
<title>unsigned int absl::container_internal::TrailingZeros&lt;unsigned short&gt; (40,121,418 samples, 0.04%)</title><rect x="193.2" y="357" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="196.16" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt;::pair&lt;unsigned long const&amp;, unsigned long const&amp;&gt; (1,163,557,160 samples, 1.19%)</title><rect x="726.7" y="229" width="14.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="729.73" y="239.5" ></text>
</g>
<g >
<title>update_load_avg (40,182,123 samples, 0.04%)</title><rect x="1117.7" y="117" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1120.66" y="127.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (40,263,134 samples, 0.04%)</title><rect x="348.8" y="357" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="351.81" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::hash_ref (80,401,837 samples, 0.08%)</title><rect x="141.2" y="389" width="1.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="144.18" y="399.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (599,218,837 samples, 0.62%)</title><rect x="962.0" y="469" width="7.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="965.01" y="479.5" ></text>
</g>
<g >
<title>all (97,420,210,181 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (79,481,643 samples, 0.08%)</title><rect x="57.7" y="389" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="60.68" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::GroupSse2Impl::MaskEmptyOrDeleted (921,258,962 samples, 0.95%)</title><rect x="161.1" y="357" width="11.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="164.11" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (40,046,706 samples, 0.04%)</title><rect x="603.8" y="293" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="606.84" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;unsigned long&gt;::operator (40,051,836 samples, 0.04%)</title><rect x="510.1" y="405" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="513.11" y="415.5" ></text>
</g>
<g >
<title>std::tuple&lt;&gt;&amp;&amp; std::forward&lt;std::tuple&lt;&gt; &gt; (79,934,060 samples, 0.08%)</title><rect x="845.6" y="357" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="848.58" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::slot_array (40,378,294 samples, 0.04%)</title><rect x="448.9" y="405" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="451.93" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (641,062,208 samples, 0.66%)</title><rect x="699.1" y="293" width="7.8" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="702.11" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;unsigned long&gt;::operator (39,250,129 samples, 0.04%)</title><rect x="279.3" y="309" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="282.28" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (79,674,912 samples, 0.08%)</title><rect x="1026.4" y="437" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1029.43" y="447.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (40,303,426 samples, 0.04%)</title><rect x="1140.0" y="501" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1142.99" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::PrepareInsertNonSoo (80,554,660 samples, 0.08%)</title><rect x="46.5" y="437" width="1.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="49.52" y="447.5" ></text>
</g>
<g >
<title>__vm_munmap (78,607,622 samples, 0.08%)</title><rect x="349.3" y="261" width="0.9" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="352.30" y="271.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (40,362,911 samples, 0.04%)</title><rect x="1187.6" y="469" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1190.56" y="479.5" ></text>
</g>
<g >
<title>std::equal_to&lt;unsigned long&gt;::operator (641,217,730 samples, 0.66%)</title><rect x="452.3" y="341" width="7.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="455.34" y="351.5" ></text>
</g>
<g >
<title>std::piecewise_construct_t const&amp; std::forward&lt;std::piecewise_construct_t const&amp;&gt; (79,563,934 samples, 0.08%)</title><rect x="828.2" y="437" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="831.16" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (160,267,268 samples, 0.16%)</title><rect x="817.0" y="341" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="820.00" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::construct&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (2,842,099,538 samples, 2.92%)</title><rect x="834.4" y="405" width="34.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="837.45" y="415.5" >ab..</text>
</g>
<g >
<title>std::equal_to&lt;unsigned long&gt;::operator (40,044,504 samples, 0.04%)</title><rect x="717.5" y="229" width="0.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="720.53" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::control (760,766,517 samples, 0.78%)</title><rect x="666.5" y="293" width="9.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="669.55" y="303.5" ></text>
</g>
<g >
<title>perf_event_task_tick (40,283,379 samples, 0.04%)</title><rect x="651.0" y="133" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="653.96" y="143.5" ></text>
</g>
<g >
<title>absl::container_internal::probe (39,811,350 samples, 0.04%)</title><rect x="47.5" y="437" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="50.49" y="447.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (40,367,411 samples, 0.04%)</title><rect x="355.1" y="245" width="0.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="358.11" y="255.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (80,137,845 samples, 0.08%)</title><rect x="1035.2" y="453" width="0.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1038.17" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator::unchecked_deref (78,751,639 samples, 0.08%)</title><rect x="548.9" y="437" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="551.94" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (80,118,063 samples, 0.08%)</title><rect x="197.1" y="357" width="0.9" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="200.05" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (40,045,819 samples, 0.04%)</title><rect x="368.7" y="373" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="371.73" y="383.5" ></text>
</g>
<g >
<title>handle_pte_fault (40,263,134 samples, 0.04%)</title><rect x="348.8" y="277" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="351.81" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (40,283,379 samples, 0.04%)</title><rect x="651.0" y="229" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="653.96" y="239.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (200,893,870 samples, 0.21%)</title><rect x="1140.5" y="501" width="2.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1143.48" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::SooControl (40,380,479 samples, 0.04%)</title><rect x="536.8" y="357" width="0.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="539.81" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled_impl (40,253,803 samples, 0.04%)</title><rect x="691.3" y="229" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="694.34" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::control (201,159,260 samples, 0.21%)</title><rect x="432.4" y="373" width="2.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="435.40" y="383.5" ></text>
</g>
<g >
<title>__count_memcg_events (40,329,330 samples, 0.04%)</title><rect x="258.8" y="197" width="0.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="261.83" y="207.5" ></text>
</g>
<g >
<title>alloc_anon_folio (281,251,672 samples, 0.29%)</title><rect x="261.8" y="149" width="3.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="264.75" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (78,584,510 samples, 0.08%)</title><rect x="669.5" y="245" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="672.45" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (80,541,240 samples, 0.08%)</title><rect x="698.1" y="261" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="701.13" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (40,370,028 samples, 0.04%)</title><rect x="670.4" y="261" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="673.40" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (280,781,111 samples, 0.29%)</title><rect x="298.2" y="261" width="3.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="301.24" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;absl::container_internal::AlignedType&lt;8ul&gt; &gt;::deallocate (80,356,319 samples, 0.08%)</title><rect x="22.7" y="405" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="25.72" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;std::hash&lt;unsigned long&gt;, 1ul, true&gt;::get (80,663,405 samples, 0.08%)</title><rect x="224.3" y="341" width="1.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="227.30" y="351.5" ></text>
</g>
<g >
<title>unmap_page_range (40,088,862 samples, 0.04%)</title><rect x="23.2" y="213" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="26.21" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::HasInfozShift (79,639,129 samples, 0.08%)</title><rect x="779.1" y="261" width="1.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="782.13" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::const_iterator::const_iterator (40,360,731 samples, 0.04%)</title><rect x="792.7" y="357" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="795.71" y="367.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (120,738,410 samples, 0.12%)</title><rect x="1018.7" y="405" width="1.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1021.66" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,213,858 samples, 0.04%)</title><rect x="439.2" y="357" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="442.21" y="367.5" ></text>
</g>
<g >
<title>int std::__bit_width&lt;unsigned short&gt; (40,302,332 samples, 0.04%)</title><rect x="173.7" y="325" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="176.73" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (40,263,134 samples, 0.04%)</title><rect x="348.8" y="181" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="351.81" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (39,976,325 samples, 0.04%)</title><rect x="764.6" y="277" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="767.58" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1,213,439,646 samples, 1.25%)</title><rect x="929.4" y="485" width="14.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="932.35" y="495.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (40,088,862 samples, 0.04%)</title><rect x="23.2" y="165" width="0.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="26.21" y="175.5" ></text>
</g>
<g >
<title>std::locale::~locale (159,943,243 samples, 0.16%)</title><rect x="967.3" y="453" width="2.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="970.33" y="463.5" ></text>
</g>
<g >
<title>decltype  (719,628,897 samples, 0.74%)</title><rect x="712.2" y="261" width="8.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="715.20" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (160,921,425 samples, 0.17%)</title><rect x="814.1" y="293" width="1.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="817.07" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (40,178,389 samples, 0.04%)</title><rect x="398.4" y="373" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="401.38" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::BitMask&lt;unsigned short, 16, 0, false&gt;::operator* (120,532,567 samples, 0.12%)</title><rect x="67.9" y="421" width="1.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="70.87" y="431.5" ></text>
</g>
<g >
<title>do_vmi_munmap (80,356,319 samples, 0.08%)</title><rect x="22.7" y="293" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="25.72" y="303.5" ></text>
</g>
<g >
<title>free@plt (36,919,710 samples, 0.04%)</title><rect x="935.4" y="453" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="938.39" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,244,119 samples, 0.04%)</title><rect x="420.7" y="389" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="423.73" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (239,470,444 samples, 0.25%)</title><rect x="52.8" y="421" width="2.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="55.84" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,316,843 samples, 0.04%)</title><rect x="446.5" y="373" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="449.50" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,344,481 samples, 0.04%)</title><rect x="124.2" y="389" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="127.17" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::HasInfozMask (40,380,571 samples, 0.04%)</title><rect x="113.0" y="373" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="116.01" y="383.5" ></text>
</g>
<g >
<title>update_process_times (40,216,278 samples, 0.04%)</title><rect x="1041.0" y="325" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1043.99" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (40,374,726 samples, 0.04%)</title><rect x="727.2" y="197" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="730.21" y="207.5" ></text>
</g>
<g >
<title>xas_load (240,067,800 samples, 0.25%)</title><rect x="1132.2" y="277" width="2.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1135.22" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 3&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;3&gt; (120,807,807 samples, 0.12%)</title><rect x="242.8" y="309" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="245.77" y="319.5" ></text>
</g>
<g >
<title>std::locale::locale (79,953,206 samples, 0.08%)</title><rect x="970.7" y="469" width="1.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="973.73" y="479.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (40,382,791 samples, 0.04%)</title><rect x="269.1" y="165" width="0.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="272.07" y="175.5" ></text>
</g>
<g >
<title>absl::container_internal::H1 (80,426,850 samples, 0.08%)</title><rect x="635.4" y="277" width="1.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="638.41" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (120,182,790 samples, 0.12%)</title><rect x="1044.9" y="453" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1047.86" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (120,401,986 samples, 0.12%)</title><rect x="1048.8" y="485" width="1.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1051.76" y="495.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (158,784,863 samples, 0.16%)</title><rect x="1021.6" y="437" width="1.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1024.58" y="447.5" ></text>
</g>
<g >
<title>task_tick_fair (40,182,123 samples, 0.04%)</title><rect x="1117.7" y="133" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1120.66" y="143.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::unchecked_deref (120,773,204 samples, 0.12%)</title><rect x="21.3" y="501" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="24.26" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (200,330,687 samples, 0.21%)</title><rect x="891.6" y="453" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="894.63" y="463.5" ></text>
</g>
<g >
<title>__free_one_page (40,088,862 samples, 0.04%)</title><rect x="23.2" y="53" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="26.21" y="63.5" ></text>
</g>
<g >
<title>absl::container_internal::SooCapacity (80,444,116 samples, 0.08%)</title><rect x="437.8" y="373" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="440.76" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (160,846,546 samples, 0.17%)</title><rect x="642.7" y="309" width="2.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="645.71" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::probe (722,972,220 samples, 0.74%)</title><rect x="181.0" y="357" width="8.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="184.02" y="367.5" ></text>
</g>
<g >
<title>bool absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::EqualElement&lt;unsigned long&gt;::operator (120,319,757 samples, 0.12%)</title><rect x="716.6" y="245" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="719.56" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (40,380,123 samples, 0.04%)</title><rect x="663.1" y="293" width="0.5" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="666.13" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (120,778,483 samples, 0.12%)</title><rect x="912.5" y="469" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="915.48" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (40,182,123 samples, 0.04%)</title><rect x="1117.7" y="213" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1120.66" y="223.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_Head_base (200,911,803 samples, 0.21%)</title><rect x="809.7" y="293" width="2.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="812.70" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::BitMask&lt;unsigned short, 16, 0, false&gt;::BitMask (39,175,540 samples, 0.04%)</title><rect x="66.0" y="421" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="68.95" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::GroupSse2Impl::MaskEmpty (80,413,075 samples, 0.08%)</title><rect x="623.8" y="309" width="1.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="626.80" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::const_iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::find&lt;unsigned long&gt; (38,439,990 samples, 0.04%)</title><rect x="793.7" y="373" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="796.68" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (120,492,854 samples, 0.12%)</title><rect x="207.3" y="341" width="1.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="210.28" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2,074,207,540 samples, 2.13%)</title><rect x="1002.8" y="469" width="25.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1005.76" y="479.5" >s..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::alloc_ref (120,807,807 samples, 0.12%)</title><rect x="242.8" y="325" width="1.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="245.77" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (80,392,116 samples, 0.08%)</title><rect x="756.8" y="261" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="759.81" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (80,718,969 samples, 0.08%)</title><rect x="750.5" y="293" width="1.0" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="753.53" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::IsSooControl (80,628,350 samples, 0.08%)</title><rect x="536.3" y="373" width="1.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="539.32" y="383.5" ></text>
</g>
<g >
<title>xas_descend (39,850,805 samples, 0.04%)</title><rect x="1133.7" y="261" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1136.67" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::offset (160,126,368 samples, 0.16%)</title><rect x="361.0" y="421" width="1.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="363.96" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (40,337,593 samples, 0.04%)</title><rect x="790.8" y="245" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="793.76" y="255.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (40,088,862 samples, 0.04%)</title><rect x="23.2" y="197" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="26.21" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::control (39,282,031 samples, 0.04%)</title><rect x="117.9" y="405" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="120.88" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (200,244,473 samples, 0.21%)</title><rect x="1042.0" y="437" width="2.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1044.95" y="447.5" ></text>
</g>
<g >
<title>void absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::construct&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (3,281,843,584 samples, 3.37%)</title><rect x="829.1" y="437" width="39.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="832.12" y="447.5" >voi..</text>
</g>
<g >
<title>absl::container_internal::NonIterableBitMask&lt;unsigned short, 16, 0&gt;::HighestBitSet (120,692,708 samples, 0.12%)</title><rect x="172.8" y="357" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="175.75" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,345,085 samples, 0.04%)</title><rect x="763.1" y="277" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="766.12" y="287.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (40,267,457 samples, 0.04%)</title><rect x="22.7" y="229" width="0.5" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="25.72" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator, bool&gt; absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::find_or_prepare_insert_non_soo&lt;unsigned long&gt; (34,387,593,671 samples, 35.30%)</title><rect x="58.6" y="437" width="416.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="61.64" y="447.5" >std::pair&lt;absl::container_internal::raw_hash_set&lt;absl::c..</text>
</g>
<g >
<title>absl::container_internal::CommonFields::HasInfozShift (80,618,931 samples, 0.08%)</title><rect x="119.8" y="389" width="1.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="122.81" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;std::hash&lt;unsigned long&gt;, 1ul, true&gt;::get (40,197,297 samples, 0.04%)</title><rect x="600.4" y="293" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="603.45" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4,318,775,637 samples, 4.43%)</title><rect x="996.0" y="485" width="52.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="998.96" y="495.5" >std::..</text>
</g>
<g >
<title>unsigned long const&amp; std::forward&lt;unsigned long const&amp;&gt; (40,371,815 samples, 0.04%)</title><rect x="819.4" y="341" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="822.42" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::set_capacity (40,190,774 samples, 0.04%)</title><rect x="227.2" y="357" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="230.22" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (715,003,390 samples, 0.73%)</title><rect x="1008.1" y="453" width="8.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1011.07" y="463.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned long const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned long const&amp;&gt; (39,924,649 samples, 0.04%)</title><rect x="818.9" y="341" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="821.94" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::offset (40,357,142 samples, 0.04%)</title><rect x="48.0" y="437" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="50.97" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (80,651,660 samples, 0.08%)</title><rect x="449.4" y="389" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="452.42" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator::unchecked_deref (79,849,272 samples, 0.08%)</title><rect x="30.0" y="485" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="33.03" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::empty (724,159,200 samples, 0.74%)</title><rect x="495.1" y="405" width="8.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="498.05" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (395,895,215 samples, 0.41%)</title><rect x="1010.0" y="437" width="4.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1012.99" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::ShouldInsertBackwardsForDebug (80,644,366 samples, 0.08%)</title><rect x="220.4" y="373" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="223.40" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (39,652,671 samples, 0.04%)</title><rect x="401.3" y="405" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="404.29" y="415.5" ></text>
</g>
<g >
<title>std::locale::~locale (40,322,228 samples, 0.04%)</title><rect x="1185.6" y="501" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1188.61" y="511.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (40,088,862 samples, 0.04%)</title><rect x="23.2" y="69" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="26.21" y="79.5" ></text>
</g>
<g >
<title>absl::container_internal::GroupSse2Impl::Match (519,608,428 samples, 0.53%)</title><rect x="624.8" y="309" width="6.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="627.77" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (120,644,099 samples, 0.12%)</title><rect x="690.4" y="245" width="1.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="693.37" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (120,147,353 samples, 0.12%)</title><rect x="812.1" y="309" width="1.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="815.13" y="319.5" ></text>
</g>
<g >
<title>bool&amp;&amp; std::forward&lt;bool&gt; (40,040,761 samples, 0.04%)</title><rect x="474.7" y="405" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="477.68" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (97,413,143,754 samples, 99.99%)</title><rect x="10.1" y="549" width="1179.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.09" y="559.5" >[libc.so.6]</text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned long const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned long const&amp;&gt; (80,227,132 samples, 0.08%)</title><rect x="464.5" y="309" width="0.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="467.46" y="319.5" ></text>
</g>
<g >
<title>filemap_read (5,919,857,705 samples, 6.08%)</title><rect x="1063.9" y="325" width="71.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1066.91" y="335.5" >filemap_..</text>
</g>
<g >
<title>absl::container_internal::CommonFields::HasInfozShift (80,666,129 samples, 0.08%)</title><rect x="113.5" y="373" width="1.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="116.50" y="383.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt; std::forward_as_tuple&lt;unsigned long const&amp;&gt; (479,533,926 samples, 0.49%)</title><rect x="510.6" y="453" width="5.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="513.60" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1,443,795,963 samples, 1.48%)</title><rect x="522.7" y="421" width="17.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="525.72" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (401,798,554 samples, 0.41%)</title><rect x="444.1" y="405" width="4.8" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="447.06" y="415.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (38,741,476 samples, 0.04%)</title><rect x="826.2" y="357" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="829.22" y="367.5" ></text>
</g>
<g >
<title>void absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::emplace_at&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (28,939,574,503 samples, 29.71%)</title><rect x="518.3" y="453" width="350.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="521.34" y="463.5" >void absl::container_internal::raw_hash_set&lt;abs..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (80,216,293 samples, 0.08%)</title><rect x="448.0" y="373" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="450.96" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (80,053,464 samples, 0.08%)</title><rect x="54.8" y="405" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="57.77" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (160,616,742 samples, 0.16%)</title><rect x="505.7" y="389" width="2.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="508.74" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::HashElement&amp;&amp; std::forward&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::HashElement&gt; (39,999,508 samples, 0.04%)</title><rect x="277.8" y="325" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="280.82" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (119,994,986 samples, 0.12%)</title><rect x="914.9" y="501" width="1.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="917.91" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::hash_ref (40,282,540 samples, 0.04%)</title><rect x="503.8" y="405" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="506.82" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (201,186,578 samples, 0.21%)</title><rect x="1182.2" y="469" width="2.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1185.20" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (80,014,070 samples, 0.08%)</title><rect x="480.5" y="373" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="483.49" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,116,475 samples, 0.04%)</title><rect x="447.0" y="357" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="449.98" y="367.5" ></text>
</g>
<g >
<title>decltype  (1,848,119,884 samples, 1.90%)</title><rect x="247.6" y="309" width="22.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="250.63" y="319.5" >d..</text>
</g>
<g >
<title>__munmap (80,356,319 samples, 0.08%)</title><rect x="22.7" y="389" width="1.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="25.72" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,088,644 samples, 0.04%)</title><rect x="688.4" y="245" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="691.42" y="255.5" ></text>
</g>
<g >
<title>__fdget_pos (40,295,373 samples, 0.04%)</title><rect x="1060.1" y="373" width="0.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1063.06" y="383.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_Head_base (80,489,775 samples, 0.08%)</title><rect x="467.9" y="293" width="0.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="470.86" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::HashSetResizeHelper::old_ctrl (40,363,935 samples, 0.04%)</title><rect x="117.4" y="405" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="120.39" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (201,158,686 samples, 0.21%)</title><rect x="736.4" y="165" width="2.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="739.44" y="175.5" ></text>
</g>
<g >
<title>unmap_vmas (38,895,119 samples, 0.04%)</title><rect x="349.8" y="197" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="352.78" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (280,853,916 samples, 0.29%)</title><rect x="890.7" y="469" width="3.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="893.65" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (159,892,340 samples, 0.16%)</title><rect x="758.8" y="277" width="1.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="761.76" y="287.5" ></text>
</g>
<g >
<title>unsigned long* std::__relocate_a&lt;unsigned long*, unsigned long*, std::allocator&lt;unsigned long&gt; &gt; (120,941,654 samples, 0.12%)</title><rect x="1188.5" y="453" width="1.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1191.54" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (40,340,485 samples, 0.04%)</title><rect x="357.1" y="405" width="0.5" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="360.06" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (40,382,359 samples, 0.04%)</title><rect x="474.2" y="341" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="477.19" y="351.5" ></text>
</g>
<g >
<title>std::istream&amp; std::istream::_M_extract&lt;unsigned long&gt; (40,339,795 samples, 0.04%)</title><rect x="13.5" y="517" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="16.49" y="527.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,304,475 samples, 0.04%)</title><rect x="685.0" y="261" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="688.01" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (40,350,118 samples, 0.04%)</title><rect x="1189.0" y="277" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1192.02" y="287.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (40,267,457 samples, 0.04%)</title><rect x="22.7" y="245" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="25.72" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (200,843,274 samples, 0.21%)</title><rect x="377.0" y="405" width="2.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="379.98" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::BitMask&lt;unsigned short, 16, 0, false&gt;::operator++ (80,481,892 samples, 0.08%)</title><rect x="618.9" y="309" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="621.93" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (40,382,359 samples, 0.04%)</title><rect x="474.2" y="405" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="477.19" y="415.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (39,712,503 samples, 0.04%)</title><rect x="349.3" y="181" width="0.5" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="352.30" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt; absl::container_internal::PairArgs&lt;unsigned long const&amp;, unsigned long const&amp;&gt; (2,082,999,687 samples, 2.14%)</title><rect x="722.4" y="245" width="25.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="725.37" y="255.5" >s..</text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (39,822,706 samples, 0.04%)</title><rect x="469.3" y="341" width="0.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="472.32" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::SooCapacity (120,802,766 samples, 0.12%)</title><rect x="654.4" y="293" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="657.36" y="303.5" ></text>
</g>
<g >
<title>std::locale::operator= (40,360,084 samples, 0.04%)</title><rect x="908.6" y="469" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="911.64" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::operator bool (40,018,875 samples, 0.04%)</title><rect x="12.5" y="517" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="15.51" y="527.5" ></text>
</g>
<g >
<title>absl::container_internal::MaybeInitializedPtr::get (40,317,265 samples, 0.04%)</title><rect x="216.0" y="309" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="219.02" y="319.5" ></text>
</g>
<g >
<title>unmap_single_vma (38,895,119 samples, 0.04%)</title><rect x="349.8" y="181" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="352.78" y="191.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (120,449,419 samples, 0.12%)</title><rect x="969.3" y="469" width="1.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="972.27" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (319,818,438 samples, 0.33%)</title><rect x="786.9" y="277" width="3.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="789.89" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (118,952,284 samples, 0.12%)</title><rect x="669.0" y="261" width="1.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="671.96" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (40,359,044 samples, 0.04%)</title><rect x="1002.3" y="469" width="0.5" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1005.27" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (40,165,309 samples, 0.04%)</title><rect x="464.0" y="293" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="466.97" y="303.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::tuple&lt;unsigned long const&amp;&gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::tuple&lt;unsigned long const&amp;&gt;&amp;&gt; (40,378,376 samples, 0.04%)</title><rect x="343.5" y="325" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="346.46" y="335.5" ></text>
</g>
<g >
<title>timekeeping_advance (40,382,791 samples, 0.04%)</title><rect x="269.1" y="117" width="0.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="272.07" y="127.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (40,382,791 samples, 0.04%)</title><rect x="269.1" y="181" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="272.07" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (80,400,051 samples, 0.08%)</title><rect x="1025.5" y="421" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1028.46" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (40,189,606 samples, 0.04%)</title><rect x="634.0" y="293" width="0.4" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="636.95" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (80,694,737 samples, 0.08%)</title><rect x="1188.5" y="389" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1191.54" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt; absl::container_internal::PairArgs&lt;unsigned long const, unsigned long&gt; (4,657,225,745 samples, 4.78%)</title><rect x="286.6" y="325" width="56.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="289.58" y="335.5" >std::..</text>
</g>
<g >
<title>[libc.so.6] (280,774,652 samples, 0.29%)</title><rect x="979.5" y="469" width="3.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="982.45" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,363,975 samples, 0.04%)</title><rect x="367.7" y="405" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="370.75" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (78,607,622 samples, 0.08%)</title><rect x="349.3" y="325" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="352.30" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled_impl (39,840,082 samples, 0.04%)</title><rect x="448.4" y="357" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="451.45" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (120,454,428 samples, 0.12%)</title><rect x="435.8" y="389" width="1.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="438.81" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::slot_array (160,876,754 samples, 0.17%)</title><rect x="683.1" y="277" width="1.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="686.06" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (38,497,087 samples, 0.04%)</title><rect x="479.0" y="389" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="482.05" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (442,561,045 samples, 0.45%)</title><rect x="686.5" y="277" width="5.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="689.47" y="287.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (40,088,862 samples, 0.04%)</title><rect x="23.2" y="133" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="26.21" y="143.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, unsigned long&gt;&amp; std::forward&lt;std::pair&lt;unsigned long const, unsigned long&gt;&amp;&gt; (80,184,643 samples, 0.08%)</title><rect x="347.3" y="357" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="350.35" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (520,114,653 samples, 0.53%)</title><rect x="805.8" y="325" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="808.83" y="335.5" ></text>
</g>
<g >
<title>__free_one_page (40,267,457 samples, 0.04%)</title><rect x="22.7" y="133" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="25.72" y="143.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::hash_ref (120,532,809 samples, 0.12%)</title><rect x="599.5" y="325" width="1.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="602.48" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::SooCapacity (39,398,595 samples, 0.04%)</title><rect x="759.7" y="261" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="762.73" y="271.5" ></text>
</g>
<g >
<title>rep_movs_alternative (4,078,611,495 samples, 4.19%)</title><rect x="1069.2" y="293" width="49.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1072.24" y="303.5" >rep_..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (320,802,354 samples, 0.33%)</title><rect x="381.4" y="389" width="3.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="384.37" y="399.5" ></text>
</g>
<g >
<title>unmap_region (78,607,622 samples, 0.08%)</title><rect x="349.3" y="213" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="352.30" y="223.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (40,367,411 samples, 0.04%)</title><rect x="355.1" y="325" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="358.11" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::const_iterator::const_iterator (120,276,359 samples, 0.12%)</title><rect x="592.7" y="341" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="595.66" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (39,544,470 samples, 0.04%)</title><rect x="494.6" y="357" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="497.57" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, unsigned long&gt;* std::launder&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; (80,479,238 samples, 0.08%)</title><rect x="267.1" y="261" width="1.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="270.11" y="271.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned long const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned long const&amp;&gt; (281,869,570 samples, 0.29%)</title><rect x="280.2" y="309" width="3.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="283.24" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (80,728,552 samples, 0.08%)</title><rect x="479.5" y="357" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="482.51" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::DoSanitizeOnSetCtrl (722,975,491 samples, 0.74%)</title><rect x="209.7" y="341" width="8.8" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="212.70" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::HashSetResizeHelper::old_capacity (79,926,248 samples, 0.08%)</title><rect x="116.4" y="405" width="1.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="119.42" y="415.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::forward&lt;unsigned long const&amp;&gt; (40,059,015 samples, 0.04%)</title><rect x="517.9" y="453" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="520.86" y="463.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (38,895,119 samples, 0.04%)</title><rect x="349.8" y="85" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="352.78" y="95.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::prefetch_heap_block (1,401,426,796 samples, 1.44%)</title><rect x="748.1" y="325" width="17.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="751.09" y="335.5" ></text>
</g>
<g >
<title>__munmap (78,607,622 samples, 0.08%)</title><rect x="349.3" y="341" width="0.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="352.30" y="351.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (80,356,319 samples, 0.08%)</title><rect x="22.7" y="277" width="1.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="25.72" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;&amp;&amp; std::forward&lt;std::tuple&lt;unsigned long const&amp;&gt; &gt; (80,409,841 samples, 0.08%)</title><rect x="839.3" y="389" width="0.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="842.27" y="399.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (240,959,896 samples, 0.25%)</title><rect x="316.7" y="277" width="2.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="319.72" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, unsigned long&gt;&amp; std::forward&lt;std::pair&lt;unsigned long const, unsigned long&gt;&amp;&gt; (120,300,660 samples, 0.12%)</title><rect x="345.9" y="341" width="1.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="348.89" y="351.5" ></text>
</g>
<g >
<title>decltype  (39,773,033 samples, 0.04%)</title><rect x="42.6" y="453" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="45.63" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (80,526,490 samples, 0.08%)</title><rect x="1117.7" y="261" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1120.66" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::slot_array (160,946,856 samples, 0.17%)</title><rect x="214.1" y="309" width="1.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="217.07" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::probe (520,749,609 samples, 0.53%)</title><rect x="632.5" y="309" width="6.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="635.51" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::EqualElement&lt;unsigned long&gt;&amp;&amp; std::forward&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::EqualElement&lt;unsigned long&gt; &gt; (40,366,525 samples, 0.04%)</title><rect x="716.1" y="245" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="719.07" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::slot_array (240,160,496 samples, 0.25%)</title><rect x="417.8" y="389" width="2.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="420.82" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::slot_array (80,694,238 samples, 0.08%)</title><rect x="130.0" y="357" width="1.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="133.01" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (120,408,701 samples, 0.12%)</title><rect x="745.7" y="229" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="748.66" y="239.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (40,051,836 samples, 0.04%)</title><rect x="510.1" y="309" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="513.11" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (40,344,367 samples, 0.04%)</title><rect x="1118.2" y="213" width="0.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1121.15" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (120,828,038 samples, 0.12%)</title><rect x="619.9" y="309" width="1.5" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="622.90" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::AssertSameContainer (681,386,697 samples, 0.70%)</title><rect x="531.0" y="405" width="8.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="533.99" y="415.5" ></text>
</g>
<g >
<title>void absl::container_internal::CommonFields::RunWithReentrancyGuard&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::transfer (3,453,875,914 samples, 3.55%)</title><rect x="229.6" y="357" width="41.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="232.65" y="367.5" >voi..</text>
</g>
<g >
<title>absl::container_internal::CommonFields::HasInfozShift (40,380,571 samples, 0.04%)</title><rect x="113.0" y="357" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="116.01" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (80,292,138 samples, 0.08%)</title><rect x="463.5" y="309" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="466.48" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (40,051,836 samples, 0.04%)</title><rect x="510.1" y="357" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="513.11" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (238,967,826 samples, 0.25%)</title><rect x="1017.7" y="453" width="2.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1020.71" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (200,862,035 samples, 0.21%)</title><rect x="998.4" y="469" width="2.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1001.39" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long, unsigned long&gt;::pair&lt;unsigned long const&amp;&gt; (79,830,669 samples, 0.08%)</title><rect x="866.4" y="341" width="1.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="869.45" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled_impl (40,321,698 samples, 0.04%)</title><rect x="443.6" y="341" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="446.58" y="351.5" ></text>
</g>
<g >
<title>decltype  (3,283,942,174 samples, 3.37%)</title><rect x="708.3" y="293" width="39.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="711.31" y="303.5" >dec..</text>
</g>
<g >
<title>unmap_single_vma (40,088,862 samples, 0.04%)</title><rect x="23.2" y="229" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="26.21" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (40,263,134 samples, 0.04%)</title><rect x="348.8" y="213" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="351.81" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (119,595,686 samples, 0.12%)</title><rect x="366.3" y="405" width="1.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="369.30" y="415.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (80,462,679 samples, 0.08%)</title><rect x="816.0" y="325" width="1.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="819.02" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (39,984,883 samples, 0.04%)</title><rect x="771.9" y="277" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="774.87" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (79,923,557 samples, 0.08%)</title><rect x="385.3" y="389" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="388.26" y="399.5" ></text>
</g>
<g >
<title>int std::__countr_zero&lt;unsigned short&gt; (39,986,609 samples, 0.04%)</title><rect x="617.0" y="261" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="619.98" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (563,045,488 samples, 0.58%)</title><rect x="258.8" y="213" width="6.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="261.83" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::dealloc (80,356,319 samples, 0.08%)</title><rect x="22.7" y="437" width="1.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="25.72" y="447.5" ></text>
</g>
<g >
<title>unmap_page_range (38,895,119 samples, 0.04%)</title><rect x="349.8" y="165" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="352.78" y="175.5" ></text>
</g>
<g >
<title>scheduler_tick (40,051,836 samples, 0.04%)</title><rect x="510.1" y="261" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="513.11" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt; absl::container_internal::PairArgs&lt;unsigned long const&amp;, unsigned long const&amp;&gt; (39,839,865 samples, 0.04%)</title><rect x="720.9" y="261" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="723.92" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (120,574,330 samples, 0.12%)</title><rect x="657.8" y="277" width="1.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="660.77" y="287.5" ></text>
</g>
<g >
<title>_start (97,413,143,754 samples, 99.99%)</title><rect x="10.1" y="581" width="1179.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.09" y="591.5" >_start</text>
</g>
<g >
<title>absl::container_internal::BitMask&lt;unsigned short, 16, 0, false&gt;::BitMask (79,850,793 samples, 0.08%)</title><rect x="95.5" y="405" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="98.52" y="415.5" ></text>
</g>
<g >
<title>unsigned int absl::container_internal::TrailingZeros&lt;unsigned short&gt; (200,968,733 samples, 0.21%)</title><rect x="616.5" y="277" width="2.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="619.49" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (40,215,952 samples, 0.04%)</title><rect x="648.0" y="229" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="651.04" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::ShouldInsertBackwardsForDebug (521,902,409 samples, 0.54%)</title><rect x="174.2" y="357" width="6.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="177.22" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (160,868,696 samples, 0.17%)</title><rect x="675.8" y="293" width="1.9" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="678.76" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (80,716,599 samples, 0.08%)</title><rect x="672.8" y="245" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="675.83" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (40,224,703 samples, 0.04%)</title><rect x="784.5" y="229" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="787.47" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (401,776,126 samples, 0.41%)</title><rect x="423.6" y="389" width="4.9" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="426.64" y="399.5" ></text>
</g>
<g >
<title>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (40,358,926 samples, 0.04%)</title><rect x="13.0" y="517" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="16.00" y="527.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (40,333,356 samples, 0.04%)</title><rect x="778.6" y="277" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="781.64" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (39,864,490 samples, 0.04%)</title><rect x="658.7" y="261" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="661.74" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::control (1,043,433,883 samples, 1.07%)</title><rect x="431.4" y="405" width="12.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="434.43" y="415.5" ></text>
</g>
<g >
<title>malloc (39,972,123 samples, 0.04%)</title><rect x="951.4" y="437" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="954.36" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::control (240,515,248 samples, 0.25%)</title><rect x="108.6" y="373" width="3.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="111.65" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::control (80,718,969 samples, 0.08%)</title><rect x="750.5" y="277" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="753.53" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::SwisstableDebugEnabled (39,580,984 samples, 0.04%)</title><rect x="547.0" y="405" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="550.02" y="415.5" ></text>
</g>
<g >
<title>void absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::AssertHashEqConsistent&lt;unsigned long&gt; (2,204,415,942 samples, 2.26%)</title><rect x="483.9" y="421" width="26.7" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="486.90" y="431.5" >v..</text>
</g>
<g >
<title>absl::container_internal::is_small (40,245,517 samples, 0.04%)</title><rect x="354.6" y="405" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="357.62" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,053,821 samples, 0.04%)</title><rect x="955.7" y="389" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="958.73" y="399.5" ></text>
</g>
<g >
<title>decltype  (6,343,922,489 samples, 6.51%)</title><rect x="271.5" y="373" width="76.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="274.48" y="383.5" >decltype </text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (159,439,698 samples, 0.16%)</title><rect x="718.5" y="213" width="1.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="721.51" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (39,610,402 samples, 0.04%)</title><rect x="971.2" y="389" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="974.22" y="399.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned long const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned long const&amp;&gt; (40,315,578 samples, 0.04%)</title><rect x="460.6" y="357" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="463.60" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (120,551,985 samples, 0.12%)</title><rect x="467.4" y="309" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="470.37" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_Head_base (40,369,120 samples, 0.04%)</title><rect x="729.6" y="181" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="732.65" y="191.5" ></text>
</g>
<g >
<title>handle_mm_fault (40,263,134 samples, 0.04%)</title><rect x="348.8" y="309" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="351.81" y="319.5" ></text>
</g>
<g >
<title>cfree (40,331,642 samples, 0.04%)</title><rect x="934.9" y="453" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="937.90" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,195,417 samples, 0.04%)</title><rect x="382.8" y="373" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="385.83" y="383.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (160,714,928 samples, 0.16%)</title><rect x="1138.0" y="485" width="2.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1141.05" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (79,702,436 samples, 0.08%)</title><rect x="923.6" y="469" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="926.61" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (80,317,123 samples, 0.08%)</title><rect x="25.2" y="485" width="0.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="28.15" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, unsigned long&gt;&amp; std::forward&lt;std::pair&lt;unsigned long const, unsigned long&gt;&amp;&gt; (38,637,024 samples, 0.04%)</title><rect x="343.0" y="325" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="345.99" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt; absl::container_internal::PairArgs&lt;unsigned long const&amp;, unsigned long const&amp;&gt; (2,446,318,203 samples, 2.51%)</title><rect x="797.1" y="373" width="29.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="800.06" y="383.5" >st..</text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,215,952 samples, 0.04%)</title><rect x="648.0" y="245" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="651.04" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (600,438,592 samples, 0.62%)</title><rect x="753.4" y="293" width="7.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="756.42" y="303.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_Head_base (80,023,476 samples, 0.08%)</title><rect x="744.2" y="181" width="1.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="747.20" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (38,500,751 samples, 0.04%)</title><rect x="440.2" y="341" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="443.19" y="351.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (562,577,864 samples, 0.58%)</title><rect x="328.4" y="277" width="6.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="331.40" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (320,309,154 samples, 0.33%)</title><rect x="312.4" y="213" width="3.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="315.35" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (40,143,525 samples, 0.04%)</title><rect x="773.3" y="293" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="776.32" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::GrowthInfo::OverwriteControlAsFull (120,782,175 samples, 0.12%)</title><rect x="115.0" y="405" width="1.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="117.96" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::NonIterableBitMask&lt;unsigned short, 16, 0&gt;::NonIterableBitMask (40,193,816 samples, 0.04%)</title><rect x="97.5" y="421" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="100.46" y="431.5" ></text>
</g>
<g >
<title>void absl::container_internal::map_slot_policy&lt;unsigned long, unsigned long&gt;::construct&lt;std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,803,115,776 samples, 1.85%)</title><rect x="847.0" y="357" width="21.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="850.03" y="367.5" >v..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (40,283,379 samples, 0.04%)</title><rect x="651.0" y="245" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="653.96" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::BitMask&lt;unsigned short, 16, 0, false&gt;::operator* (40,296,424 samples, 0.04%)</title><rect x="596.5" y="325" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="599.55" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::HasInfozShift (37,682,507 samples, 0.04%)</title><rect x="122.3" y="373" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="125.25" y="383.5" ></text>
</g>
<g >
<title>do_vmi_munmap (78,607,622 samples, 0.08%)</title><rect x="349.3" y="245" width="0.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="352.30" y="255.5" ></text>
</g>
<g >
<title>handle_pte_fault (40,362,911 samples, 0.04%)</title><rect x="1187.6" y="389" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1190.56" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled_impl (80,390,296 samples, 0.08%)</title><rect x="690.4" y="213" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="693.37" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (80,366,448 samples, 0.08%)</title><rect x="752.0" y="277" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="754.99" y="287.5" ></text>
</g>
<g >
<title>decltype  (22,973,610,965 samples, 23.58%)</title><rect x="549.9" y="437" width="278.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="552.89" y="447.5" >decltype </text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (80,728,552 samples, 0.08%)</title><rect x="479.5" y="373" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="482.51" y="383.5" ></text>
</g>
<g >
<title>current_time (39,952,344 samples, 0.04%)</title><rect x="1135.1" y="277" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1138.13" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::H1 (79,826,860 samples, 0.08%)</title><rect x="353.7" y="405" width="0.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="356.66" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::resize_impl (17,061,346,588 samples, 17.51%)</title><rect x="142.2" y="389" width="206.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="145.15" y="399.5" >absl::container_internal::r..</text>
</g>
<g >
<title>operator new (119,641,176 samples, 0.12%)</title><rect x="892.6" y="437" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="895.61" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt; absl::container_internal::PairArgs&lt;unsigned long const, unsigned long&gt; (80,206,014 samples, 0.08%)</title><rect x="344.9" y="341" width="1.0" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="347.92" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt;::pair&lt;unsigned long const&amp;, 0ul, unsigned long const&amp;, 0ul&gt; (1,323,732,309 samples, 1.36%)</title><rect x="801.0" y="341" width="16.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="803.97" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::increment_size (39,828,706 samples, 0.04%)</title><rect x="111.6" y="405" width="0.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="114.56" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::eq_ref (79,796,240 samples, 0.08%)</title><rect x="391.6" y="421" width="0.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="394.57" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (840,012,942 samples, 0.86%)</title><rect x="1036.1" y="469" width="10.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1039.14" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1,524,397,997 samples, 1.56%)</title><rect x="521.7" y="437" width="18.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="524.75" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (39,748,570 samples, 0.04%)</title><rect x="782.0" y="245" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="785.05" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt; absl::container_internal::PairArgs&lt;unsigned long const, unsigned long&gt; (760,235,343 samples, 0.78%)</title><rect x="461.1" y="373" width="9.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="464.08" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (160,512,108 samples, 0.16%)</title><rect x="413.9" y="405" width="2.0" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="416.94" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (80,661,938 samples, 0.08%)</title><rect x="422.7" y="373" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="425.66" y="383.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (201,020,850 samples, 0.21%)</title><rect x="813.6" y="309" width="2.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="816.59" y="319.5" ></text>
</g>
<g >
<title>generic_file_read_iter (5,919,857,705 samples, 6.08%)</title><rect x="1063.9" y="341" width="71.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1066.91" y="351.5" >generic_..</text>
</g>
<g >
<title>unsigned long const&amp; std::forward&lt;unsigned long const&amp;&gt; (119,179,708 samples, 0.12%)</title><rect x="339.1" y="293" width="1.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="342.11" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (40,378,668 samples, 0.04%)</title><rect x="445.0" y="389" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="448.03" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::PrepareInsertCommon (400,346,346 samples, 0.41%)</title><rect x="118.8" y="405" width="4.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="121.84" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,342,123 samples, 0.04%)</title><rect x="154.8" y="357" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="157.79" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,379,076 samples, 0.04%)</title><rect x="663.6" y="293" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="666.62" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (238,804,388 samples, 0.25%)</title><rect x="940.2" y="469" width="2.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="943.19" y="479.5" ></text>
</g>
<g >
<title>std::piecewise_construct_t const&amp; std::forward&lt;std::piecewise_construct_t const&amp;&gt; (80,075,604 samples, 0.08%)</title><rect x="842.2" y="373" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="845.18" y="383.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::forward&lt;unsigned long const&amp;&gt; (39,933,446 samples, 0.04%)</title><rect x="747.1" y="229" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="750.12" y="239.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (40,315,578 samples, 0.04%)</title><rect x="460.6" y="325" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="463.60" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt;::pair&lt;unsigned long const&amp;, unsigned long const&amp;&gt; (400,487,973 samples, 0.41%)</title><rect x="461.6" y="341" width="4.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="464.55" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (80,125,608 samples, 0.08%)</title><rect x="757.8" y="261" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="760.79" y="271.5" ></text>
</g>
<g >
<title>x64_sys_call (6,438,409,824 samples, 6.61%)</title><rect x="1059.6" y="421" width="78.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1062.58" y="431.5" >x64_sys_c..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (160,815,874 samples, 0.17%)</title><rect x="308.0" y="245" width="1.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="310.97" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::slot_array (40,378,294 samples, 0.04%)</title><rect x="448.9" y="389" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="451.93" y="399.5" ></text>
</g>
<g >
<title>void absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::AssertOnFind&lt;unsigned long&gt; (40,228,216 samples, 0.04%)</title><rect x="792.2" y="341" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="795.22" y="351.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (40,267,457 samples, 0.04%)</title><rect x="22.7" y="213" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="25.72" y="223.5" ></text>
</g>
<g >
<title>vfs_read (6,277,704,941 samples, 6.44%)</title><rect x="1061.5" y="373" width="76.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1064.52" y="383.5" >vfs_read</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::prefetch_heap_block (1,686,277,530 samples, 1.73%)</title><rect x="428.5" y="421" width="20.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="431.51" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 1&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;1&gt; (40,359,872 samples, 0.04%)</title><rect x="777.2" y="293" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="780.18" y="303.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::tuple&lt;unsigned long const&amp;&gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::tuple&lt;unsigned long const&amp;&gt;&amp;&gt; (40,373,105 samples, 0.04%)</title><rect x="279.8" y="309" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="282.75" y="319.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt; (120,941,654 samples, 0.12%)</title><rect x="1188.5" y="485" width="1.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1191.54" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,002,902 samples, 0.04%)</title><rect x="768.5" y="293" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="771.46" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (120,784,913 samples, 0.12%)</title><rect x="407.1" y="389" width="1.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="410.11" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (160,887,960 samples, 0.17%)</title><rect x="649.0" y="277" width="2.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="652.02" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::BitMask&lt;unsigned short, 16, 0, false&gt;::end (118,935,135 samples, 0.12%)</title><rect x="66.4" y="421" width="1.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="69.43" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,374,010 samples, 0.04%)</title><rect x="645.6" y="277" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="648.62" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (200,601,902 samples, 0.21%)</title><rect x="304.6" y="245" width="2.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="307.57" y="255.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_Head_base (161,251,085 samples, 0.17%)</title><rect x="333.3" y="245" width="1.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="336.26" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,298,476 samples, 0.04%)</title><rect x="771.4" y="277" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="774.38" y="287.5" ></text>
</g>
<g >
<title>cfree (239,920,390 samples, 0.25%)</title><rect x="937.3" y="437" width="2.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="940.28" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (80,695,633 samples, 0.08%)</title><rect x="436.3" y="373" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="439.29" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::H1 (40,349,430 samples, 0.04%)</title><rect x="185.4" y="341" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="188.40" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,374,429 samples, 0.04%)</title><rect x="120.8" y="389" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="123.79" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (119,669,299 samples, 0.12%)</title><rect x="794.6" y="341" width="1.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="797.64" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (40,182,123 samples, 0.04%)</title><rect x="1117.7" y="149" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1120.66" y="159.5" ></text>
</g>
<g >
<title>xas_start (80,645,062 samples, 0.08%)</title><rect x="1134.2" y="261" width="0.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1137.15" y="271.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (611,897,020 samples, 0.63%)</title><rect x="1052.2" y="421" width="7.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1055.16" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (80,582,051 samples, 0.08%)</title><rect x="660.7" y="277" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="663.69" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (40,346,758 samples, 0.04%)</title><rect x="1048.3" y="485" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1051.27" y="495.5" ></text>
</g>
<g >
<title>decltype  (19,844,280,858 samples, 20.37%)</title><rect x="586.8" y="405" width="240.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="589.82" y="415.5" >decltype </text>
</g>
<g >
<title>std::pair&lt;unsigned long, unsigned long&gt;::pair&lt;unsigned long const&amp;&gt; (720,955,912 samples, 0.74%)</title><rect x="856.7" y="325" width="8.8" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="859.74" y="335.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned long const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned long const&amp;&gt; (237,962,644 samples, 0.24%)</title><rect x="862.6" y="293" width="2.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="865.59" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::HashElement&amp;&amp; std::forward&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::HashElement&gt; (40,006,477 samples, 0.04%)</title><rect x="278.8" y="309" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="281.79" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (80,356,319 samples, 0.08%)</title><rect x="22.7" y="357" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="25.72" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator++ (120,110,377 samples, 0.12%)</title><rect x="19.8" y="501" width="1.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="22.80" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (40,226,949 samples, 0.04%)</title><rect x="944.1" y="501" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="947.05" y="511.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (40,240,033 samples, 0.04%)</title><rect x="925.6" y="469" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="928.55" y="479.5" ></text>
</g>
<g >
<title>std::locale::operator= (40,032,757 samples, 0.04%)</title><rect x="903.3" y="453" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="906.29" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (80,281,654 samples, 0.08%)</title><rect x="924.6" y="469" width="1.0" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="927.58" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (39,923,078 samples, 0.04%)</title><rect x="943.6" y="469" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="946.57" y="479.5" ></text>
</g>
<g >
<title>std::piecewise_construct_t const&amp; std::forward&lt;std::piecewise_construct_t const&amp;&gt; (40,320,907 samples, 0.04%)</title><rect x="838.8" y="389" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="841.78" y="399.5" ></text>
</g>
<g >
<title>sync_regs (40,348,384 samples, 0.04%)</title><rect x="268.1" y="261" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="271.09" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (40,060,372 samples, 0.04%)</title><rect x="935.8" y="453" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="938.84" y="463.5" ></text>
</g>
<g >
<title>free_unref_page_list (40,088,862 samples, 0.04%)</title><rect x="23.2" y="101" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="26.21" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (120,941,654 samples, 0.12%)</title><rect x="1188.5" y="437" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1191.54" y="447.5" ></text>
</g>
<g >
<title>alloc_anon_folio (40,263,134 samples, 0.04%)</title><rect x="348.8" y="245" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="351.81" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (120,553,979 samples, 0.12%)</title><rect x="1013.3" y="421" width="1.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1016.32" y="431.5" ></text>
</g>
<g >
<title>free_swap_cache (39,712,503 samples, 0.04%)</title><rect x="349.3" y="165" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="352.30" y="175.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator::unchecked_deref (159,116,965 samples, 0.16%)</title><rect x="32.0" y="469" width="1.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="34.97" y="479.5" ></text>
</g>
<g >
<title>std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;unsigned long&gt; (2,763,633,233 samples, 2.84%)</title><rect x="1151.2" y="485" width="33.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1154.16" y="495.5" >st..</text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,093,530 samples, 0.04%)</title><rect x="697.6" y="293" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="700.65" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled_impl (40,225,523 samples, 0.04%)</title><rect x="675.3" y="229" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="678.27" y="239.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (80,576,908 samples, 0.08%)</title><rect x="926.0" y="469" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="929.04" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (80,390,296 samples, 0.08%)</title><rect x="690.4" y="229" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="693.37" y="239.5" ></text>
</g>
<g >
<title>decltype  (40,019,974 samples, 0.04%)</title><rect x="883.9" y="501" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="886.86" y="511.5" ></text>
</g>
<g >
<title>std::integral_constant&lt;bool, true&gt;::operator bool (40,266,526 samples, 0.04%)</title><rect x="266.6" y="261" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="269.63" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (120,418,532 samples, 0.12%)</title><rect x="954.8" y="405" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="957.75" y="415.5" ></text>
</g>
<g >
<title>__libc_start_main (97,413,143,754 samples, 99.99%)</title><rect x="10.1" y="565" width="1179.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.09" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>filemap_read (40,201,714 samples, 0.04%)</title><rect x="1063.4" y="341" width="0.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1066.42" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long, unsigned long&gt;::pair&lt;unsigned long const&amp;, 0ul&gt; (80,423,506 samples, 0.08%)</title><rect x="855.8" y="325" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="858.76" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (281,251,672 samples, 0.29%)</title><rect x="261.8" y="85" width="3.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="264.75" y="95.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (160,723,655 samples, 0.16%)</title><rect x="499.9" y="341" width="2.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="502.92" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (603,303,734 samples, 0.62%)</title><rect x="654.4" y="309" width="7.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="657.36" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (40,216,278 samples, 0.04%)</title><rect x="1041.0" y="341" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1043.99" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (40,382,791 samples, 0.04%)</title><rect x="269.1" y="197" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="272.07" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (80,448,056 samples, 0.08%)</title><rect x="231.6" y="341" width="1.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="234.59" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFieldsGenerationInfoDisabled::generation_ptr (40,187,381 samples, 0.04%)</title><rect x="621.4" y="309" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="624.37" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (78,966,380 samples, 0.08%)</title><rect x="462.5" y="309" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="465.53" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (120,658,709 samples, 0.12%)</title><rect x="594.1" y="341" width="1.5" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="597.11" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (763,067,358 samples, 0.78%)</title><rect x="947.5" y="485" width="9.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="950.46" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (40,216,278 samples, 0.04%)</title><rect x="1041.0" y="421" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1043.99" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (120,298,508 samples, 0.12%)</title><rect x="390.1" y="373" width="1.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="393.11" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (40,276,525 samples, 0.04%)</title><rect x="390.6" y="357" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="393.60" y="367.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (117,037,322 samples, 0.12%)</title><rect x="864.1" y="277" width="1.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="867.05" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_Head_base (161,007,348 samples, 0.17%)</title><rect x="731.6" y="165" width="1.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="734.59" y="175.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 1&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;1&gt; (80,663,405 samples, 0.08%)</title><rect x="224.3" y="357" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="227.30" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (161,043,191 samples, 0.17%)</title><rect x="424.6" y="357" width="2.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="427.61" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::set_capacity (522,925,883 samples, 0.54%)</title><rect x="232.6" y="341" width="6.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="235.56" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages (281,251,672 samples, 0.29%)</title><rect x="261.8" y="101" width="3.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="264.75" y="111.5" ></text>
</g>
<g >
<title>unmap_region (80,356,319 samples, 0.08%)</title><rect x="22.7" y="261" width="1.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="25.72" y="271.5" ></text>
</g>
<g >
<title>void absl::container_internal::common_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::transfer&lt;std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt; (120,675,165 samples, 0.12%)</title><rect x="270.0" y="341" width="1.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="273.02" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;unsigned long&gt;::operator (40,256,721 samples, 0.04%)</title><rect x="766.0" y="325" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="769.04" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::control (924,913,265 samples, 0.95%)</title><rect x="402.7" y="405" width="11.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="405.74" y="415.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (521,424,069 samples, 0.54%)</title><rect x="309.9" y="245" width="6.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="312.92" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::H2 (39,928,871 samples, 0.04%)</title><rect x="631.1" y="309" width="0.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="634.07" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (80,125,608 samples, 0.08%)</title><rect x="757.8" y="245" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="760.79" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::NumClonedBytes (80,405,201 samples, 0.08%)</title><rect x="218.5" y="341" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="221.46" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (80,719,786 samples, 0.08%)</title><rect x="378.4" y="373" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="381.44" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (1,003,412,200 samples, 1.03%)</title><rect x="379.4" y="405" width="12.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="382.42" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt;::pair&lt;unsigned long const&amp;, unsigned long const&amp;&gt; (1,644,963,522 samples, 1.69%)</title><rect x="800.0" y="357" width="19.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="802.99" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (159,908,794 samples, 0.16%)</title><rect x="493.1" y="389" width="2.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="496.11" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::AssertIsValidForComparison (441,604,302 samples, 0.45%)</title><rect x="525.6" y="405" width="5.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="528.64" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (40,367,544 samples, 0.04%)</title><rect x="785.9" y="245" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="788.91" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (120,312,679 samples, 0.12%)</title><rect x="508.7" y="373" width="1.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="511.66" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::IsFull (79,842,119 samples, 0.08%)</title><rect x="139.7" y="389" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="142.72" y="399.5" ></text>
</g>
<g >
<title>update_process_times (39,610,402 samples, 0.04%)</title><rect x="971.2" y="341" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="974.22" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt;::pair&lt;unsigned long const&amp;, unsigned long const&amp;&gt; (40,345,846 samples, 0.04%)</title><rect x="340.6" y="309" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="343.55" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (40,237,102 samples, 0.04%)</title><rect x="369.2" y="389" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="372.21" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,375,240 samples, 0.04%)</title><rect x="762.6" y="277" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="765.63" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (40,099,425 samples, 0.04%)</title><rect x="813.6" y="293" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="816.59" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 1&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;1&gt; (40,058,609 samples, 0.04%)</title><rect x="786.4" y="277" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="789.40" y="287.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned long const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned long const&amp;&gt; (762,625,658 samples, 0.78%)</title><rect x="307.0" y="261" width="9.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="310.00" y="271.5" ></text>
</g>
<g >
<title>vma_alloc_folio (281,251,672 samples, 0.29%)</title><rect x="261.8" y="133" width="3.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="264.75" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (200,629,878 samples, 0.21%)</title><rect x="911.5" y="501" width="2.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="914.51" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 2&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;2&gt; (159,597,157 samples, 0.16%)</title><rect x="651.9" y="293" width="2.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="654.94" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (40,283,379 samples, 0.04%)</title><rect x="651.0" y="213" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="653.96" y="223.5" ></text>
</g>
<g >
<title>auto absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;::transfer&lt;std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt; (40,256,678 samples, 0.04%)</title><rect x="247.1" y="309" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="250.15" y="319.5" ></text>
</g>
<g >
<title>ydb-hashtables- (97,420,187,848 samples, 100.00%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >ydb-hashtables-</text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (200,803,524 samples, 0.21%)</title><rect x="636.4" y="277" width="2.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="639.39" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (39,538,517 samples, 0.04%)</title><rect x="795.6" y="325" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="798.61" y="335.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (442,252,364 samples, 0.45%)</title><rect x="301.6" y="261" width="5.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="304.64" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::SetCtrl (2,128,355,203 samples, 2.18%)</title><rect x="194.6" y="373" width="25.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="197.62" y="383.5" >a..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (40,338,965 samples, 0.04%)</title><rect x="688.9" y="245" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="691.91" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (38,983,407 samples, 0.04%)</title><rect x="1041.5" y="437" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1044.48" y="447.5" ></text>
</g>
<g >
<title>unsigned int absl::container_internal::TrailingZeros&lt;unsigned short&gt; (40,366,555 samples, 0.04%)</title><rect x="68.8" y="405" width="0.5" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="71.84" y="415.5" ></text>
</g>
<g >
<title>free_unref_page_list (40,267,457 samples, 0.04%)</title><rect x="22.7" y="181" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="25.72" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (40,382,791 samples, 0.04%)</title><rect x="269.1" y="261" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="272.07" y="271.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::forward&lt;unsigned long const&amp;&gt; (160,956,846 samples, 0.17%)</title><rect x="335.2" y="277" width="2.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="338.22" y="287.5" ></text>
</g>
<g >
<title>xas_descend (40,343,027 samples, 0.04%)</title><rect x="1131.7" y="277" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1134.73" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,050,306,844 samples, 7.24%)</title><rect x="1052.2" y="437" width="85.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1055.16" y="447.5" >do_syscall..</text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (40,344,808 samples, 0.04%)</title><rect x="57.2" y="405" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="60.19" y="415.5" ></text>
</g>
<g >
<title>char const* std::addressof&lt;char const&gt; (80,404,265 samples, 0.08%)</title><rect x="1019.1" y="389" width="1.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1022.15" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (40,378,761 samples, 0.04%)</title><rect x="864.1" y="261" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="867.05" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::HashSetIteratorGenerationInfoDisabled::HashSetIteratorGenerationInfoDisabled (80,591,442 samples, 0.08%)</title><rect x="400.3" y="405" width="1.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="403.31" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::SwisstableGenerationsEnabled (80,331,242 samples, 0.08%)</title><rect x="530.0" y="389" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="533.02" y="399.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt; std::forward_as_tuple&lt;unsigned long const&amp;&gt; (40,339,073 samples, 0.04%)</title><rect x="469.8" y="357" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="472.80" y="367.5" ></text>
</g>
<g >
<title>std::locale::locale (79,771,032 samples, 0.08%)</title><rect x="974.1" y="485" width="1.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="977.13" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;&amp;&amp; std::forward&lt;std::tuple&lt;unsigned long const&amp;&gt; &gt; (40,349,494 samples, 0.04%)</title><rect x="846.5" y="357" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="849.54" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 1&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;1&gt; (40,366,883 samples, 0.04%)</title><rect x="221.4" y="373" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="224.38" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (600,614,170 samples, 0.62%)</title><rect x="51.4" y="437" width="7.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="54.37" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (120,257,029 samples, 0.12%)</title><rect x="449.4" y="405" width="1.5" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="452.42" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (40,295,483 samples, 0.04%)</title><rect x="509.6" y="357" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="512.63" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (79,199,191 samples, 0.08%)</title><rect x="785.0" y="229" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="787.95" y="239.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::__or_&lt;std::is_same&lt;std::remove_cv&lt;unsigned short&gt;::type, unsigned char&gt;, std::is_same&lt;std::remove_cv&lt;unsigned short&gt;::type, unsigned short&gt;, std::is_same&lt;std::remove_cv&lt;unsigned short&gt;::type, unsigned int&gt;, std::is_same&lt;std::remove_cv&lt;unsigned short&gt;::type, unsigned long&gt;, std::is_same&lt;std::remove_cv&lt;unsigned short&gt;::type, unsigned long long&gt;, std::is_same&lt;std::remove_cv&lt;unsigned short&gt;::type, unsigned __int128&gt; &gt;::value, int&gt;::type std::bit_width&lt;unsigned short&gt; (40,302,332 samples, 0.04%)</title><rect x="173.7" y="341" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="176.73" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (360,156,031 samples, 0.37%)</title><rect x="786.9" y="293" width="4.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="789.89" y="303.5" ></text>
</g>
<g >
<title>decltype  (20,205,912,816 samples, 20.74%)</title><rect x="582.4" y="421" width="244.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="585.44" y="431.5" >decltype </text>
</g>
<g >
<title>bool absl::container_internal::HashSetResizeHelper::InitializeSlots&lt;std::allocator&lt;char&gt;, 16ul, true, true, 8ul&gt; (40,263,134 samples, 0.04%)</title><rect x="348.8" y="389" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="351.81" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (153,356,015 samples, 0.16%)</title><rect x="927.5" y="485" width="1.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="930.50" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (116,836,240 samples, 0.12%)</title><rect x="916.9" y="501" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="919.86" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (80,286,092 samples, 0.08%)</title><rect x="633.0" y="293" width="1.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="635.98" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::control (119,864,479 samples, 0.12%)</title><rect x="667.5" y="261" width="1.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="670.51" y="271.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (120,990,001 samples, 0.12%)</title><rect x="282.2" y="261" width="1.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="285.19" y="271.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::__or_&lt;std::is_same&lt;std::remove_cv&lt;unsigned short&gt;::type, unsigned char&gt;, std::is_same&lt;std::remove_cv&lt;unsigned short&gt;::type, unsigned short&gt;, std::is_same&lt;std::remove_cv&lt;unsigned short&gt;::type, unsigned int&gt;, std::is_same&lt;std::remove_cv&lt;unsigned short&gt;::type, unsigned long&gt;, std::is_same&lt;std::remove_cv&lt;unsigned short&gt;::type, unsigned long long&gt;, std::is_same&lt;std::remove_cv&lt;unsigned short&gt;::type, unsigned __int128&gt; &gt;::value, int&gt;::type std::countr_zero&lt;unsigned short&gt; (120,741,970 samples, 0.12%)</title><rect x="617.5" y="261" width="1.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="620.47" y="271.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::forward&lt;unsigned long const&amp;&gt; (40,330,149 samples, 0.04%)</title><rect x="316.2" y="261" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="319.23" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,109,627 samples, 0.04%)</title><rect x="506.7" y="357" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="509.71" y="367.5" ></text>
</g>
<g >
<title>auto absl::container_internal::map_slot_policy&lt;unsigned long, unsigned long&gt;::transfer&lt;std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt; (1,286,407,114 samples, 1.32%)</title><rect x="253.0" y="277" width="15.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="255.99" y="287.5" ></text>
</g>
<g >
<title>std::istream&amp; std::istream::_M_extract&lt;unsigned long&gt; (3,163,861,160 samples, 3.25%)</title><rect x="1146.3" y="501" width="38.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1149.31" y="511.5" >std..</text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (39,637,248 samples, 0.04%)</title><rect x="127.6" y="373" width="0.5" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="130.58" y="383.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (40,315,578 samples, 0.04%)</title><rect x="460.6" y="341" width="0.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="463.60" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (80,526,490 samples, 0.08%)</title><rect x="1117.7" y="277" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1120.66" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (200,957,191 samples, 0.21%)</title><rect x="689.4" y="261" width="2.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="692.40" y="271.5" ></text>
</g>
<g >
<title>clear_page_erms (40,350,118 samples, 0.04%)</title><rect x="1189.0" y="229" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.02" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,336,503 samples, 0.04%)</title><rect x="673.3" y="229" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="676.32" y="239.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned long const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned long const&amp;&gt; (159,439,698 samples, 0.16%)</title><rect x="718.5" y="245" width="1.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="721.51" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::hash_ref (39,645,233 samples, 0.04%)</title><rect x="392.5" y="421" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="395.54" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (80,274,805 samples, 0.08%)</title><rect x="384.3" y="357" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="387.28" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (40,365,499 samples, 0.04%)</title><rect x="428.0" y="341" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="431.02" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::FindElement&amp;&amp; std::forward&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::FindElement&gt; (40,133,620 samples, 0.04%)</title><rect x="582.0" y="421" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="584.95" y="431.5" ></text>
</g>
<g >
<title>void absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::AssertOnFind&lt;unsigned long&gt; (2,040,944,135 samples, 2.09%)</title><rect x="766.5" y="325" width="24.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="769.53" y="335.5" >v..</text>
</g>
<g >
<title>[libc.so.6] (79,993,541 samples, 0.08%)</title><rect x="939.2" y="421" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="942.22" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (239,851,659 samples, 0.25%)</title><rect x="601.4" y="309" width="2.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="604.42" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::control (40,142,377 samples, 0.04%)</title><rect x="184.9" y="325" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="187.92" y="335.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (40,360,534 samples, 0.04%)</title><rect x="956.7" y="485" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="959.70" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (120,738,410 samples, 0.12%)</title><rect x="1018.7" y="421" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1021.66" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,299,976 samples, 0.04%)</title><rect x="1021.1" y="437" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1024.09" y="447.5" ></text>
</g>
<g >
<title>std::locale::~locale (38,592,780 samples, 0.04%)</title><rect x="982.9" y="485" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="985.85" y="495.5" ></text>
</g>
<g >
<title>decltype  (1,161,313,933 samples, 1.19%)</title><rect x="852.4" y="341" width="14.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="855.38" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::HashSetIteratorGenerationInfoDisabled::generation (40,240,619 samples, 0.04%)</title><rect x="547.5" y="421" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="550.50" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (40,367,411 samples, 0.04%)</title><rect x="355.1" y="341" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="358.11" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (320,804,140 samples, 0.33%)</title><rect x="1027.9" y="469" width="3.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1030.88" y="479.5" ></text>
</g>
<g >
<title>unsigned long absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::HashElement::operator (120,787,755 samples, 0.12%)</title><rect x="283.7" y="309" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="286.65" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,364,984 samples, 0.04%)</title><rect x="54.3" y="405" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="57.28" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::PrepareInsertCommon (80,665,382 samples, 0.08%)</title><rect x="97.9" y="421" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="100.95" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (201,204,404 samples, 0.21%)</title><rect x="410.0" y="373" width="2.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="413.04" y="383.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt; std::forward_as_tuple&lt;unsigned long const&amp;&gt; (1,406,653,587 samples, 1.44%)</title><rect x="320.1" y="293" width="17.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="323.13" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::NonIterableBitMask&lt;unsigned short, 16, 0&gt;::LowestBitSet (241,248,055 samples, 0.25%)</title><rect x="616.0" y="293" width="2.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="619.01" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (39,976,325 samples, 0.04%)</title><rect x="764.6" y="261" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="767.58" y="271.5" ></text>
</g>
<g >
<title>perf_event_task_tick (40,216,278 samples, 0.04%)</title><rect x="1041.0" y="293" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1043.99" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (478,080,276 samples, 0.49%)</title><rect x="1039.1" y="453" width="5.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1042.07" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::control (39,822,419 samples, 0.04%)</title><rect x="645.1" y="277" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="648.14" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (39,610,402 samples, 0.04%)</title><rect x="971.2" y="373" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="974.22" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (79,789,985 samples, 0.08%)</title><rect x="208.7" y="341" width="1.0" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="211.74" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (120,949,791 samples, 0.12%)</title><rect x="369.7" y="421" width="1.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="372.70" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::slot_array (360,302,539 samples, 0.37%)</title><rect x="692.8" y="293" width="4.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="695.80" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::control (39,681,614 samples, 0.04%)</title><rect x="209.2" y="325" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="212.22" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (40,367,411 samples, 0.04%)</title><rect x="355.1" y="405" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="358.11" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator, bool&gt; absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::try_emplace&lt;unsigned long, , 0&gt; (68,974,876,130 samples, 70.80%)</title><rect x="33.9" y="485" width="835.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="36.89" y="495.5" >std::pair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned..</text>
</g>
<g >
<title>unsigned long const&amp; std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (40,379,621 samples, 0.04%)</title><rect x="796.1" y="373" width="0.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="799.09" y="383.5" ></text>
</g>
<g >
<title>update_process_times (40,367,411 samples, 0.04%)</title><rect x="355.1" y="293" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="358.11" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;absl::container_internal::AlignedType&lt;8ul&gt; &gt;::deallocate (78,607,622 samples, 0.08%)</title><rect x="349.3" y="357" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="352.30" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (80,309,364 samples, 0.08%)</title><rect x="10.1" y="517" width="1.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="13.09" y="527.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (79,234,496 samples, 0.08%)</title><rect x="789.8" y="261" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="792.80" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (200,079,969 samples, 0.21%)</title><rect x="754.4" y="261" width="2.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="757.39" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::IsSooControl (79,828,941 samples, 0.08%)</title><rect x="538.3" y="389" width="0.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="541.28" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::empty (40,227,141 samples, 0.04%)</title><rect x="481.5" y="421" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="484.46" y="431.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt; (200,786,735 samples, 0.21%)</title><rect x="23.7" y="501" width="2.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="26.70" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::const_iterator::const_iterator (79,860,138 samples, 0.08%)</title><rect x="540.2" y="437" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="543.21" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::BitMask&lt;unsigned short, 16, 0, false&gt;::BitMask (79,779,919 samples, 0.08%)</title><rect x="615.0" y="293" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="618.04" y="303.5" ></text>
</g>
<g >
<title>char* std::__addressof&lt;char&gt; (80,368,312 samples, 0.08%)</title><rect x="922.2" y="437" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="925.15" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::control (40,173,136 samples, 0.04%)</title><rect x="50.4" y="437" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="53.39" y="447.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (39,610,402 samples, 0.04%)</title><rect x="971.2" y="453" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="974.22" y="463.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (321,289,076 samples, 0.33%)</title><rect x="900.9" y="469" width="3.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="903.86" y="479.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (39,610,402 samples, 0.04%)</title><rect x="971.2" y="293" width="0.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="974.22" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (119,700,753 samples, 0.12%)</title><rect x="1000.8" y="469" width="1.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1003.82" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (120,660,605 samples, 0.12%)</title><rect x="412.5" y="373" width="1.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="415.48" y="383.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1,398,774,029 samples, 1.44%)</title><rect x="957.2" y="485" width="16.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="960.19" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (281,163,095 samples, 0.29%)</title><rect x="655.8" y="293" width="3.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="658.82" y="303.5" ></text>
</g>
<g >
<title>void absl::container_internal::common_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::construct&lt;std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (2,363,337,934 samples, 2.43%)</title><rect x="840.2" y="389" width="28.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="843.25" y="399.5" >vo..</text>
</g>
<g >
<title>__fsnotify_parent (80,444,021 samples, 0.08%)</title><rect x="1136.6" y="341" width="1.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1139.59" y="351.5" ></text>
</g>
<g >
<title>do_anonymous_page (40,263,134 samples, 0.04%)</title><rect x="348.8" y="261" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="351.81" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator, bool&gt; absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::find_or_prepare_insert&lt;unsigned long&gt; (38,595,394,377 samples, 39.62%)</title><rect x="43.1" y="453" width="467.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="46.11" y="463.5" >std::pair&lt;absl::container_internal::raw_hash_set&lt;absl::container..</text>
</g>
<g >
<title>tick_nohz_highres_handler (40,283,379 samples, 0.04%)</title><rect x="651.0" y="197" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="653.96" y="207.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (360,685,756 samples, 0.37%)</title><rect x="311.9" y="229" width="4.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="314.87" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::is_small (39,906,349 samples, 0.04%)</title><rect x="180.5" y="357" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="183.54" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (200,048,741 samples, 0.21%)</title><rect x="1029.3" y="453" width="2.5" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1032.35" y="463.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (321,817,428 samples, 0.33%)</title><rect x="735.0" y="181" width="3.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="737.98" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (40,196,574 samples, 0.04%)</title><rect x="422.2" y="357" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="425.18" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (40,319,000 samples, 0.04%)</title><rect x="114.0" y="309" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="116.99" y="319.5" ></text>
</g>
<g >
<title>void absl::container_internal::common_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::transfer&lt;std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt; (2,048,482,146 samples, 2.10%)</title><rect x="245.2" y="325" width="24.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="248.21" y="335.5" >v..</text>
</g>
<g >
<title>absl::container_internal::PrepareInsertNonSoo (20,749,112,463 samples, 21.30%)</title><rect x="98.9" y="421" width="251.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="101.93" y="431.5" >absl::container_internal::Prepare..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (481,202,725 samples, 0.49%)</title><rect x="600.9" y="325" width="5.9" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="603.94" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::H1 (40,101,442 samples, 0.04%)</title><rect x="172.3" y="357" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="175.27" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (80,541,240 samples, 0.08%)</title><rect x="698.1" y="277" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="701.13" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages (40,263,134 samples, 0.04%)</title><rect x="348.8" y="197" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="351.81" y="207.5" ></text>
</g>
<g >
<title>unmap_vmas (40,088,862 samples, 0.04%)</title><rect x="23.2" y="245" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="26.21" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (40,367,411 samples, 0.04%)</title><rect x="355.1" y="309" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="358.11" y="319.5" ></text>
</g>
<g >
<title>operator new (40,361,453 samples, 0.04%)</title><rect x="266.1" y="261" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="269.14" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::NumClonedBytes (80,506,645 samples, 0.08%)</title><rect x="198.0" y="357" width="1.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="201.02" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::offset (120,243,670 samples, 0.12%)</title><rect x="222.4" y="373" width="1.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="225.36" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::(anonymous namespace)::RandomSeed (201,287,163 samples, 0.21%)</title><rect x="177.6" y="341" width="2.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="180.62" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,054,220 samples, 0.04%)</title><rect x="395.9" y="389" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="398.95" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::prefetch_heap_block (79,963,616 samples, 0.08%)</title><rect x="791.2" y="341" width="1.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="794.25" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (40,266,687 samples, 0.04%)</title><rect x="443.1" y="341" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="446.09" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (40,201,961 samples, 0.04%)</title><rect x="741.8" y="213" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="744.78" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (360,666,821 samples, 0.37%)</title><rect x="760.7" y="309" width="4.4" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="763.70" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (441,463,338 samples, 0.45%)</title><rect x="386.2" y="389" width="5.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="389.22" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::destructor_impl (80,356,319 samples, 0.08%)</title><rect x="22.7" y="453" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="25.72" y="463.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (40,382,359 samples, 0.04%)</title><rect x="474.2" y="373" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="477.19" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 1&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;1&gt; (39,645,233 samples, 0.04%)</title><rect x="392.5" y="405" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="395.54" y="415.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (119,773,146 samples, 0.12%)</title><rect x="516.4" y="453" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="519.41" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator::operator* (562,164,742 samples, 0.58%)</title><rect x="541.2" y="437" width="6.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="544.18" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::(anonymous namespace)::RandomSeed (40,229,854 samples, 0.04%)</title><rect x="65.5" y="421" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="68.46" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator::iterator (119,558,304 samples, 0.12%)</title><rect x="415.9" y="405" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="418.89" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::slot_array (80,258,123 samples, 0.08%)</title><rect x="216.5" y="325" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="219.51" y="335.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (120,696,273 samples, 0.12%)</title><rect x="260.3" y="149" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="263.29" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 2&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;2&gt; (40,372,495 samples, 0.04%)</title><rect x="631.5" y="309" width="0.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="634.55" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (79,641,900 samples, 0.08%)</title><rect x="705.4" y="245" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="708.42" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::offset (280,916,153 samples, 0.29%)</title><rect x="638.8" y="309" width="3.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="641.82" y="319.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (80,694,737 samples, 0.08%)</title><rect x="1188.5" y="421" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1191.54" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (80,506,285 samples, 0.08%)</title><rect x="502.8" y="373" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="505.85" y="383.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;&amp;&amp; std::forward&lt;std::tuple&lt;unsigned long const&amp;&gt; &gt; (40,140,090 samples, 0.04%)</title><rect x="868.4" y="341" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="871.39" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::transfer (2,569,492,892 samples, 2.64%)</title><rect x="238.9" y="341" width="31.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="241.90" y="351.5" >ab..</text>
</g>
<g >
<title>decltype  (1,562,774,495 samples, 1.60%)</title><rect x="451.4" y="405" width="18.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="454.36" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_Head_base (119,928,505 samples, 0.12%)</title><rect x="515.0" y="405" width="1.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="517.95" y="415.5" ></text>
</g>
<g >
<title>atime_needs_update (39,952,344 samples, 0.04%)</title><rect x="1135.1" y="293" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1138.13" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::ShouldInsertBackwardsForDebug (401,594,758 samples, 0.41%)</title><rect x="350.7" y="421" width="4.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="353.74" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::MaybeInitializedPtr::get (40,376,813 samples, 0.04%)</title><rect x="420.2" y="373" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="423.24" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (80,376,565 samples, 0.08%)</title><rect x="368.2" y="389" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="371.24" y="399.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (240,049,181 samples, 0.25%)</title><rect x="1148.3" y="485" width="2.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1151.25" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (479,156,906 samples, 0.49%)</title><rect x="504.3" y="405" width="5.8" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="507.31" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::H1 (39,843,068 samples, 0.04%)</title><rect x="180.1" y="341" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="183.05" y="351.5" ></text>
</g>
<g >
<title>do_anonymous_page (40,362,911 samples, 0.04%)</title><rect x="1187.6" y="373" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1190.56" y="383.5" ></text>
</g>
<g >
<title>std::locale::~locale (120,837,983 samples, 0.12%)</title><rect x="972.7" y="469" width="1.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="975.67" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::SooCapacity (40,249,972 samples, 0.04%)</title><rect x="380.9" y="389" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="383.88" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,173,306 samples, 0.04%)</title><rect x="687.9" y="245" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="690.93" y="255.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::forward&lt;unsigned long const&amp;&gt; (40,378,789 samples, 0.04%)</title><rect x="745.2" y="213" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="748.17" y="223.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (80,210,817 samples, 0.08%)</title><rect x="310.9" y="229" width="1.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="313.89" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (40,283,379 samples, 0.04%)</title><rect x="651.0" y="261" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="653.96" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (40,275,300 samples, 0.04%)</title><rect x="863.6" y="277" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="866.56" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (160,210,281 samples, 0.16%)</title><rect x="337.2" y="293" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="340.17" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (120,573,941 samples, 0.12%)</title><rect x="447.5" y="389" width="1.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="450.47" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (39,976,325 samples, 0.04%)</title><rect x="764.6" y="293" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="767.58" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::PerTableSalt (40,234,903 samples, 0.04%)</title><rect x="635.9" y="261" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="638.90" y="271.5" ></text>
</g>
<g >
<title>folio_add_new_anon_rmap (40,104,548 samples, 0.04%)</title><rect x="265.2" y="149" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="268.16" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::IsFull (120,355,702 samples, 0.12%)</title><rect x="131.0" y="357" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="133.99" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (40,216,762 samples, 0.04%)</title><rect x="653.9" y="309" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="656.87" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (160,449,566 samples, 0.16%)</title><rect x="383.3" y="373" width="2.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="386.31" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (80,356,319 samples, 0.08%)</title><rect x="22.7" y="325" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="25.72" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (40,142,377 samples, 0.04%)</title><rect x="184.9" y="341" width="0.5" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="187.92" y="351.5" ></text>
</g>
<g >
<title>std::locale::operator= (80,180,411 samples, 0.08%)</title><rect x="971.7" y="469" width="1.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="974.70" y="479.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (40,367,411 samples, 0.04%)</title><rect x="355.1" y="373" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="358.11" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (40,366,724 samples, 0.04%)</title><rect x="406.6" y="389" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="409.62" y="399.5" ></text>
</g>
<g >
<title>free_unref_page_prepare (38,895,119 samples, 0.04%)</title><rect x="349.8" y="37" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="352.78" y="47.5" ></text>
</g>
<g >
<title>__handle_mm_fault (40,362,911 samples, 0.04%)</title><rect x="1187.6" y="405" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1190.56" y="415.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (80,344,880 samples, 0.08%)</title><rect x="739.4" y="213" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="742.36" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::slot_array (281,998,423 samples, 0.29%)</title><rect x="213.1" y="325" width="3.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="216.10" y="335.5" ></text>
</g>
<g >
<title>decltype  (1,562,774,495 samples, 1.60%)</title><rect x="451.4" y="389" width="18.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="454.36" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (39,605,369 samples, 0.04%)</title><rect x="450.4" y="373" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="453.40" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (80,271,723 samples, 0.08%)</title><rect x="773.8" y="309" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="776.80" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator, bool&gt; absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::try_emplace&lt;unsigned long, , 0&gt; (40,266,672 samples, 0.04%)</title><rect x="869.4" y="501" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="872.35" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (241,520,953 samples, 0.25%)</title><rect x="424.1" y="373" width="2.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="427.12" y="383.5" ></text>
</g>
<g >
<title>decltype  (5,660,620,317 samples, 5.81%)</title><rect x="276.4" y="341" width="68.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="279.36" y="351.5" >decltype </text>
</g>
<g >
<title>absl::container_internal::operator!= (40,137,443 samples, 0.04%)</title><rect x="355.6" y="421" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="358.60" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::hash_ref (40,058,609 samples, 0.04%)</title><rect x="786.4" y="293" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="789.40" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (320,966,819 samples, 0.33%)</title><rect x="107.7" y="389" width="3.9" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="110.67" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (40,292,393 samples, 0.04%)</title><rect x="896.0" y="485" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="899.00" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (360,995,612 samples, 0.37%)</title><rect x="1031.8" y="469" width="4.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1034.77" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (40,051,836 samples, 0.04%)</title><rect x="510.1" y="325" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="513.11" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (40,222,152 samples, 0.04%)</title><rect x="890.2" y="469" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="893.17" y="479.5" ></text>
</g>
<g >
<title>exc_page_fault (40,263,134 samples, 0.04%)</title><rect x="348.8" y="341" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="351.81" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (442,292,964 samples, 0.45%)</title><rect x="496.5" y="357" width="5.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="499.51" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (161,035,682 samples, 0.17%)</title><rect x="445.5" y="389" width="2.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="448.52" y="399.5" ></text>
</g>
<g >
<title>decltype  (69,616,141,221 samples, 71.46%)</title><rect x="26.1" y="501" width="843.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="29.13" y="511.5" >decltype </text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (321,099,703 samples, 0.33%)</title><rect x="923.1" y="485" width="3.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="926.12" y="495.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::allocator&lt;char&gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (39,872,522 samples, 0.04%)</title><rect x="920.7" y="469" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="923.70" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (201,350,494 samples, 0.21%)</title><rect x="1024.0" y="437" width="2.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1026.99" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::SooCapacity (40,318,437 samples, 0.04%)</title><rect x="409.6" y="373" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="412.55" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::SetCtrl (40,304,820 samples, 0.04%)</title><rect x="140.7" y="389" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="143.69" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (39,266,433 samples, 0.04%)</title><rect x="705.9" y="229" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="708.91" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (78,607,622 samples, 0.08%)</title><rect x="349.3" y="309" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="352.30" y="319.5" ></text>
</g>
<g >
<title>void absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::AssertHashEqConsistent&lt;unsigned long&gt; (40,293,314 samples, 0.04%)</title><rect x="475.2" y="437" width="0.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="478.16" y="447.5" ></text>
</g>
<g >
<title>std::locale::operator= (161,037,833 samples, 0.17%)</title><rect x="965.4" y="453" width="1.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="968.38" y="463.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (40,270,324 samples, 0.04%)</title><rect x="891.1" y="453" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="894.14" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_Head_base (40,375,495 samples, 0.04%)</title><rect x="304.1" y="245" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="307.08" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::DoSanitizeOnSetCtrl (361,717,784 samples, 0.37%)</title><rect x="128.1" y="373" width="4.3" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="131.06" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::EqualElement&lt;unsigned long&gt;&amp;&amp; std::forward&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::EqualElement&lt;unsigned long&gt; &gt; (40,299,254 samples, 0.04%)</title><rect x="451.4" y="357" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="454.36" y="367.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (281,251,672 samples, 0.29%)</title><rect x="261.8" y="117" width="3.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="264.75" y="127.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (40,336,194 samples, 0.04%)</title><rect x="41.2" y="453" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.16" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt; absl::container_internal::PairArgs&lt;unsigned long const, unsigned long&gt; (2,203,533,625 samples, 2.26%)</title><rect x="721.4" y="261" width="26.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="724.40" y="271.5" >s..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,130,591,216 samples, 7.32%)</title><rect x="1051.2" y="453" width="86.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1054.19" y="463.5" >entry_SYSC..</text>
</g>
<g >
<title>std::pair&lt;unsigned long, unsigned long&gt;::pair&lt;unsigned long const&amp;, 0ul&gt; (680,579,104 samples, 0.70%)</title><rect x="857.2" y="309" width="8.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="860.23" y="319.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (40,267,457 samples, 0.04%)</title><rect x="22.7" y="149" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="25.72" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::NonIterableBitMask&lt;unsigned short, 16, 0&gt;::LowestBitSet (80,166,012 samples, 0.08%)</title><rect x="67.9" y="405" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="70.87" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::base (40,340,607 samples, 0.04%)</title><rect x="18.8" y="501" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="21.83" y="511.5" ></text>
</g>
<g >
<title>void absl::container_internal::Deallocate&lt;8ul, std::allocator&lt;char&gt; &gt; (78,607,622 samples, 0.08%)</title><rect x="349.3" y="373" width="0.9" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="352.30" y="383.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (36,238,536 samples, 0.04%)</title><rect x="909.6" y="485" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="912.61" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::control (40,346,994 samples, 0.04%)</title><rect x="406.1" y="389" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="409.14" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::probe (401,969,061 samples, 0.41%)</title><rect x="356.1" y="421" width="4.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="359.09" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_Head_base (40,165,309 samples, 0.04%)</title><rect x="464.0" y="277" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="466.97" y="287.5" ></text>
</g>
<g >
<title>free_unref_page_commit (40,267,457 samples, 0.04%)</title><rect x="22.7" y="165" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="25.72" y="175.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (121,011,564 samples, 0.12%)</title><rect x="983.8" y="501" width="1.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="986.81" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,164,270 samples, 0.04%)</title><rect x="396.4" y="389" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="399.43" y="399.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned long const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned long const&amp;&gt; (441,267,349 samples, 0.45%)</title><rect x="733.5" y="197" width="5.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="736.54" y="207.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (159,439,698 samples, 0.16%)</title><rect x="718.5" y="197" width="1.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="721.51" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (40,283,143 samples, 0.04%)</title><rect x="507.2" y="357" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="510.19" y="367.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (40,134,925 samples, 0.04%)</title><rect x="1044.4" y="437" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1047.38" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (7,251,209,049 samples, 7.44%)</title><rect x="1050.2" y="485" width="87.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1053.22" y="495.5" >std::basic..</text>
</g>
<g >
<title>[libc.so.6] (200,328,747 samples, 0.21%)</title><rect x="1032.7" y="453" width="2.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1035.75" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (78,387,604 samples, 0.08%)</title><rect x="941.2" y="453" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="944.16" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (160,991,123 samples, 0.17%)</title><rect x="102.8" y="405" width="2.0" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="105.81" y="415.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (40,051,836 samples, 0.04%)</title><rect x="510.1" y="229" width="0.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="513.11" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::control (1,684,924,317 samples, 1.73%)</title><rect x="371.2" y="421" width="20.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="374.16" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (40,116,475 samples, 0.04%)</title><rect x="447.0" y="373" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="449.98" y="383.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (39,566,132 samples, 0.04%)</title><rect x="720.4" y="245" width="0.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="723.44" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::SooCapacity (40,183,201 samples, 0.04%)</title><rect x="605.3" y="293" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="608.30" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (240,583,942 samples, 0.25%)</title><rect x="786.9" y="261" width="2.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="789.89" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::probe (321,568,954 samples, 0.33%)</title><rect x="634.9" y="293" width="3.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="637.92" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (40,283,379 samples, 0.04%)</title><rect x="651.0" y="149" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="653.96" y="159.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (200,095,348 samples, 0.21%)</title><rect x="898.4" y="469" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="901.43" y="479.5" ></text>
</g>
<g >
<title>decltype  (40,080,799 samples, 0.04%)</title><rect x="844.6" y="357" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="847.60" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::infoz (200,852,045 samples, 0.21%)</title><rect x="112.0" y="405" width="2.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="115.04" y="415.5" ></text>
</g>
<g >
<title>__handle_mm_fault (40,263,134 samples, 0.04%)</title><rect x="348.8" y="293" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="351.81" y="303.5" ></text>
</g>
<g >
<title>release_pages (40,088,862 samples, 0.04%)</title><rect x="23.2" y="117" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="26.21" y="127.5" ></text>
</g>
<g >
<title>clear_page_erms (281,251,672 samples, 0.29%)</title><rect x="261.8" y="69" width="3.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="264.75" y="79.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt;, 3ul, true&gt;::get (80,431,456 samples, 0.08%)</title><rect x="243.3" y="293" width="0.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="246.26" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::set_capacity (39,525,698 samples, 0.04%)</title><rect x="830.1" y="421" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="833.10" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::~raw_hash_map (80,356,319 samples, 0.08%)</title><rect x="22.7" y="485" width="1.0" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="25.72" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,114,636 samples, 0.04%)</title><rect x="54.8" y="389" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="57.77" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,378,248 samples, 0.04%)</title><rect x="409.1" y="373" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="412.07" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (482,766,631 samples, 0.50%)</title><rect x="393.0" y="421" width="5.9" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="396.02" y="431.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (38,895,119 samples, 0.04%)</title><rect x="349.8" y="149" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="352.78" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (80,526,490 samples, 0.08%)</title><rect x="1117.7" y="229" width="0.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1120.66" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (79,544,105 samples, 0.08%)</title><rect x="602.9" y="293" width="0.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="605.88" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (40,095,009 samples, 0.04%)</title><rect x="435.3" y="389" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="438.33" y="399.5" ></text>
</g>
<g >
<title>char* std::addressof&lt;char&gt; (120,594,967 samples, 0.12%)</title><rect x="921.7" y="453" width="1.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="924.66" y="463.5" ></text>
</g>
<g >
<title>bool absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::EqualElement&lt;unsigned long&gt;::operator (681,559,208 samples, 0.70%)</title><rect x="451.9" y="357" width="8.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="454.85" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::SetCtrl (40,270,907 samples, 0.04%)</title><rect x="350.2" y="421" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="353.25" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (40,320,848 samples, 0.04%)</title><rect x="1047.8" y="469" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1050.78" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (40,360,240 samples, 0.04%)</title><rect x="805.3" y="325" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="808.35" y="335.5" ></text>
</g>
<g >
<title>__lruvec_stat_mod_folio (40,104,548 samples, 0.04%)</title><rect x="265.2" y="133" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="268.16" y="143.5" ></text>
</g>
<g >
<title>absl::container_internal::IsFull (39,768,010 samples, 0.04%)</title><rect x="118.4" y="405" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="121.35" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::GrowthInfo::HasNoDeletedAndGrowthLeft (40,065,706 samples, 0.04%)</title><rect x="114.5" y="405" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="117.47" y="415.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (40,362,911 samples, 0.04%)</title><rect x="1187.6" y="357" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1190.56" y="367.5" ></text>
</g>
<g >
<title>dget_parent (39,978,445 samples, 0.04%)</title><rect x="1062.9" y="341" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1065.94" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (40,283,379 samples, 0.04%)</title><rect x="651.0" y="277" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="653.96" y="287.5" ></text>
</g>
<g >
<title>release_pages (40,267,457 samples, 0.04%)</title><rect x="22.7" y="197" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="25.72" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,314,797 samples, 0.04%)</title><rect x="408.1" y="373" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="411.09" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (40,382,791 samples, 0.04%)</title><rect x="269.1" y="213" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="272.07" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::GroupSse2Impl::GroupSse2Impl (40,367,595 samples, 0.04%)</title><rect x="45.1" y="437" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="48.05" y="447.5" ></text>
</g>
<g >
<title>__mod_node_page_state (40,104,548 samples, 0.04%)</title><rect x="265.2" y="101" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="268.16" y="111.5" ></text>
</g>
<g >
<title>malloc (80,187,134 samples, 0.08%)</title><rect x="1013.8" y="389" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1016.81" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::NonIterableBitMask&lt;unsigned short, 16, 0&gt;::NonIterableBitMask (39,483,039 samples, 0.04%)</title><rect x="615.5" y="277" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="618.53" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt; std::forward_as_tuple&lt;unsigned long const&amp;&gt; (398,975,838 samples, 0.41%)</title><rect x="740.8" y="229" width="4.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="743.83" y="239.5" ></text>
</g>
<g >
<title>std::piecewise_construct_t const&amp; std::forward&lt;std::piecewise_construct_t const&amp;&gt; (40,082,072 samples, 0.04%)</title><rect x="845.1" y="357" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="848.09" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::MaybeInitializedPtr::get (119,565,870 samples, 0.12%)</title><rect x="695.7" y="277" width="1.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="698.72" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::control (560,995,302 samples, 0.58%)</title><rect x="644.7" y="309" width="6.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="647.66" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (40,362,632 samples, 0.04%)</title><rect x="916.4" y="501" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="919.37" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (76,658,561 samples, 0.08%)</title><rect x="864.5" y="261" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="867.54" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, unsigned long&gt;&amp; std::forward&lt;std::pair&lt;unsigned long const, unsigned long&gt;&amp;&gt; (80,562,778 samples, 0.08%)</title><rect x="827.2" y="421" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="830.18" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::AssertNotDebugCapacity (522,893,337 samples, 0.54%)</title><rect x="495.5" y="373" width="6.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="498.54" y="383.5" ></text>
</g>
<g >
<title>std::locale::locale (78,244,932 samples, 0.08%)</title><rect x="964.4" y="453" width="1.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="967.43" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::GroupSse2Impl::MaskEmpty (641,267,780 samples, 0.66%)</title><rect x="81.9" y="421" width="7.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="84.92" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::HashSetIteratorGenerationInfoDisabled::generation_ptr (40,333,715 samples, 0.04%)</title><rect x="522.2" y="421" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="525.23" y="431.5" ></text>
</g>
<g >
<title>decltype  (1,602,920,667 samples, 1.65%)</title><rect x="450.9" y="421" width="19.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="453.88" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (39,920,216 samples, 0.04%)</title><rect x="464.9" y="261" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="467.95" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (40,368,002 samples, 0.04%)</title><rect x="936.3" y="453" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="939.33" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (119,652,920 samples, 0.12%)</title><rect x="493.6" y="373" width="1.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="496.60" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::size (724,159,200 samples, 0.74%)</title><rect x="495.1" y="389" width="8.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="498.05" y="399.5" ></text>
</g>
<g >
<title>zap_pte_range (38,895,119 samples, 0.04%)</title><rect x="349.8" y="133" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="352.78" y="143.5" ></text>
</g>
<g >
<title>void absl::container_internal::CommonFields::RunWithReentrancyGuard&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::construct&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (3,161,883,212 samples, 3.25%)</title><rect x="830.6" y="421" width="38.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="833.57" y="431.5" >voi..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (120,231,079 samples, 0.12%)</title><rect x="894.1" y="469" width="1.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="897.06" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (80,548,525 samples, 0.08%)</title><rect x="397.9" y="405" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="400.89" y="415.5" ></text>
</g>
<g >
<title>ksys_read (6,438,409,824 samples, 6.61%)</title><rect x="1059.6" y="389" width="78.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1062.58" y="399.5" >ksys_read</text>
</g>
<g >
<title>std::integral_constant&lt;bool, true&gt;::operator bool (80,751,394 samples, 0.08%)</title><rect x="268.6" y="277" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="271.58" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (40,362,911 samples, 0.04%)</title><rect x="1187.6" y="437" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1190.56" y="447.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::tuple&lt;unsigned long const&amp;&gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::tuple&lt;unsigned long const&amp;&gt;&amp;&gt; (40,366,059 samples, 0.04%)</title><rect x="718.0" y="245" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="721.02" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (80,607,799 samples, 0.08%)</title><rect x="501.9" y="373" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="504.87" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::size (80,647,134 samples, 0.08%)</title><rect x="122.7" y="373" width="1.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="125.71" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (200,055,060 samples, 0.21%)</title><rect x="374.6" y="405" width="2.4" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="377.56" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 3&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;3&gt; (40,305,000 samples, 0.04%)</title><rect x="836.9" y="389" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="839.86" y="399.5" ></text>
</g>
<g >
<title>std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;unsigned long&gt; (40,223,256 samples, 0.04%)</title><rect x="1185.1" y="501" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1188.12" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (38,316,812 samples, 0.04%)</title><rect x="775.7" y="309" width="0.5" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="778.74" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (120,376,753 samples, 0.12%)</title><rect x="820.9" y="341" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="823.89" y="351.5" ></text>
</g>
<g >
<title>clear_bhb_loop (40,301,156 samples, 0.04%)</title><rect x="1050.7" y="453" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1053.70" y="463.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (39,920,216 samples, 0.04%)</title><rect x="464.9" y="293" width="0.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="467.95" y="303.5" ></text>
</g>
<g >
<title>operator new (80,390,438 samples, 0.08%)</title><rect x="1012.3" y="421" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1015.35" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (79,816,833 samples, 0.08%)</title><rect x="228.2" y="357" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="231.19" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::_mm_cmpgt_epi8_fixed (358,961,593 samples, 0.37%)</title><rect x="167.9" y="341" width="4.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="170.92" y="351.5" ></text>
</g>
<g >
<title>main (97,413,143,754 samples, 99.99%)</title><rect x="10.1" y="533" width="1179.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.09" y="543.5" >main</text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,010,166 samples, 0.04%)</title><rect x="490.2" y="405" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="493.21" y="415.5" ></text>
</g>
<g >
<title>decltype  (80,330,884 samples, 0.08%)</title><rect x="244.2" y="325" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="247.23" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (80,541,240 samples, 0.08%)</title><rect x="698.1" y="293" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="701.13" y="303.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned long const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned long const&amp;&gt; (40,369,278 samples, 0.04%)</title><rect x="740.3" y="213" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="743.34" y="223.5" ></text>
</g>
<g >
<title>decltype  (39,042,864 samples, 0.04%)</title><rect x="33.4" y="453" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="36.42" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::has_infoz (161,222,448 samples, 0.17%)</title><rect x="112.5" y="389" width="2.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="115.52" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (40,216,278 samples, 0.04%)</title><rect x="1041.0" y="373" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1043.99" y="383.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1,083,454,390 samples, 1.11%)</title><rect x="896.5" y="485" width="13.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="899.49" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (200,119,911 samples, 0.21%)</title><rect x="514.0" y="421" width="2.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="516.98" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator::slot (78,467,304 samples, 0.08%)</title><rect x="548.0" y="437" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="550.99" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (79,486,834 samples, 0.08%)</title><rect x="421.7" y="373" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="424.70" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (40,283,639 samples, 0.04%)</title><rect x="49.9" y="437" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="52.90" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (120,809,211 samples, 0.12%)</title><rect x="1046.3" y="469" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1049.32" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (80,363,287 samples, 0.08%)</title><rect x="401.8" y="405" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="404.77" y="415.5" ></text>
</g>
<g >
<title>decltype  (80,697,269 samples, 0.08%)</title><rect x="1187.1" y="485" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1190.07" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (441,154,975 samples, 0.45%)</title><rect x="646.1" y="293" width="5.4" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="649.11" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::const_iterator absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::find&lt;unsigned long&gt; (16,596,672,173 samples, 17.04%)</title><rect x="591.7" y="357" width="201.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="594.68" y="367.5" >absl::container_internal::..</text>
</g>
<g >
<title>copy_page_to_iter (4,317,902,405 samples, 4.43%)</title><rect x="1066.3" y="309" width="52.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1069.34" y="319.5" >copy_..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (520,827,040 samples, 0.53%)</title><rect x="437.8" y="389" width="6.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="440.76" y="399.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned long const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned long const&amp;&gt; (40,234,268 samples, 0.04%)</title><rect x="465.9" y="325" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="468.92" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::FindInfo absl::container_internal::find_first_non_full&lt;void&gt; (3,769,083,992 samples, 3.87%)</title><rect x="148.0" y="373" width="45.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="150.99" y="383.5" >absl..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;::operator* (40,318,487 samples, 0.04%)</title><rect x="19.3" y="501" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="22.32" y="511.5" ></text>
</g>
<g >
<title>char const* std::addressof&lt;char const&gt; (40,306,952 samples, 0.04%)</title><rect x="1042.4" y="421" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1045.43" y="431.5" ></text>
</g>
<g >
<title>std::piecewise_construct_t const&amp; std::forward&lt;std::piecewise_construct_t const&amp;&gt; (80,434,429 samples, 0.08%)</title><rect x="867.4" y="341" width="1.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="870.41" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (440,977,601 samples, 0.45%)</title><rect x="950.9" y="453" width="5.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="953.87" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (80,118,601 samples, 0.08%)</title><rect x="183.9" y="341" width="1.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="186.95" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (40,349,206 samples, 0.04%)</title><rect x="760.2" y="261" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="763.21" y="271.5" ></text>
</g>
<g >
<title>perf_event_task_tick (39,610,402 samples, 0.04%)</title><rect x="971.2" y="309" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="974.22" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (79,234,496 samples, 0.08%)</title><rect x="789.8" y="245" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="792.80" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (80,392,770 samples, 0.08%)</title><rect x="506.7" y="373" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="509.71" y="383.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_Head_base (80,183,726 samples, 0.08%)</title><rect x="824.8" y="309" width="0.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="827.77" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (39,610,402 samples, 0.04%)</title><rect x="971.2" y="421" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="974.22" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (40,324,600 samples, 0.04%)</title><rect x="413.5" y="341" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="416.45" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type const&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (39,975,975 samples, 0.04%)</title><rect x="777.7" y="277" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="780.67" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (40,239,954 samples, 0.04%)</title><rect x="943.1" y="469" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="946.08" y="479.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (159,439,698 samples, 0.16%)</title><rect x="718.5" y="229" width="1.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="721.51" y="239.5" ></text>
</g>
<g >
<title>__rcu_read_lock (40,344,619 samples, 0.04%)</title><rect x="1188.5" y="293" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1191.54" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (160,130,937 samples, 0.16%)</title><rect x="921.2" y="485" width="1.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="924.19" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::is_soo (401,909,755 samples, 0.41%)</title><rect x="670.9" y="277" width="4.9" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="673.89" y="287.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (40,043,778 samples, 0.04%)</title><rect x="1137.6" y="453" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1140.56" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (39,605,369 samples, 0.04%)</title><rect x="450.4" y="389" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="453.40" y="399.5" ></text>
</g>
<g >
<title>tick_sched_handle (39,610,402 samples, 0.04%)</title><rect x="971.2" y="357" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="974.22" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::GroupSse2Impl::GroupSse2Impl (160,437,752 samples, 0.16%)</title><rect x="621.9" y="309" width="1.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="624.85" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (37,724,471 samples, 0.04%)</title><rect x="753.0" y="293" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="755.97" y="303.5" ></text>
</g>
<g >
<title>__fsnotify_parent (80,301,573 samples, 0.08%)</title><rect x="1060.6" y="373" width="0.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1063.55" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::slot_array (922,373,430 samples, 0.95%)</title><rect x="417.3" y="405" width="11.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="420.33" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::FindElement&amp;&amp; std::forward&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::FindElement&gt; (40,199,024 samples, 0.04%)</title><rect x="586.3" y="405" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="589.33" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::SanitizerUnpoisonMemoryRegion (40,369,855 samples, 0.04%)</title><rect x="218.0" y="325" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="220.97" y="335.5" ></text>
</g>
<g >
<title>decltype  (3,203,503,754 samples, 3.29%)</title><rect x="709.3" y="277" width="38.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="712.29" y="287.5" >dec..</text>
</g>
<g >
<title>absl::container_internal::SetCtrl (642,406,894 samples, 0.66%)</title><rect x="124.7" y="389" width="7.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="127.66" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::~raw_hash_set (80,356,319 samples, 0.08%)</title><rect x="22.7" y="469" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="25.72" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (40,382,359 samples, 0.04%)</title><rect x="474.2" y="389" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="477.19" y="399.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (40,088,862 samples, 0.04%)</title><rect x="23.2" y="149" width="0.5" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="26.21" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::HashtablezInfoHandle::RecordInsert (40,252,265 samples, 0.04%)</title><rect x="96.5" y="421" width="0.5" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="99.49" y="431.5" ></text>
</g>
<g >
<title>malloc (320,766,425 samples, 0.33%)</title><rect x="952.3" y="421" width="3.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="955.33" y="431.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (239,393,109 samples, 0.25%)</title><rect x="742.3" y="213" width="2.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="745.27" y="223.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (39,860,767 samples, 0.04%)</title><rect x="1035.7" y="437" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1038.66" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (40,281,362 samples, 0.04%)</title><rect x="642.2" y="309" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="645.22" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::slot_array (40,315,001 samples, 0.04%)</title><rect x="130.5" y="341" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="133.50" y="351.5" ></text>
</g>
<g >
<title>free_unref_page_commit (40,088,862 samples, 0.04%)</title><rect x="23.2" y="85" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="26.21" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,425,374 samples, 0.08%)</title><rect x="981.9" y="453" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="984.88" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (241,603,854 samples, 0.25%)</title><rect x="686.5" y="261" width="2.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="689.47" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (40,109,627 samples, 0.04%)</title><rect x="506.7" y="341" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="509.71" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;absl::container_internal::CommonFields, 0ul, false&gt;::get (40,304,475 samples, 0.04%)</title><rect x="685.0" y="245" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="688.01" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (119,796,959 samples, 0.12%)</title><rect x="211.6" y="325" width="1.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="214.64" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (120,857,667 samples, 0.12%)</title><rect x="665.1" y="277" width="1.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="668.08" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (40,362,911 samples, 0.04%)</title><rect x="1187.6" y="421" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1190.56" y="431.5" ></text>
</g>
<g >
<title>std::locale::~locale (80,373,153 samples, 0.08%)</title><rect x="903.8" y="453" width="0.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="906.78" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (80,126,163 samples, 0.08%)</title><rect x="942.1" y="453" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="945.11" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::increment_size (198,614,871 samples, 0.20%)</title><rect x="121.3" y="389" width="2.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="124.28" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Storage&lt;std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt;, 3ul, true&gt;::get (38,484,625 samples, 0.04%)</title><rect x="838.3" y="373" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="841.32" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::capacity (199,658,743 samples, 0.20%)</title><rect x="646.1" y="277" width="2.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="649.11" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (40,090,974 samples, 0.04%)</title><rect x="356.6" y="405" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="359.58" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (40,350,118 samples, 0.04%)</title><rect x="1189.0" y="245" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1192.02" y="255.5" ></text>
</g>
<g >
<title>__fsnotify_parent (39,978,445 samples, 0.04%)</title><rect x="1062.9" y="357" width="0.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1065.94" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (79,857,847 samples, 0.08%)</title><rect x="854.8" y="325" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="857.80" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (80,366,448 samples, 0.08%)</title><rect x="752.0" y="293" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="754.99" y="303.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (40,367,367 samples, 0.04%)</title><rect x="983.3" y="501" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="986.32" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::SooCapacity (40,343,401 samples, 0.04%)</title><rect x="505.2" y="389" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="508.25" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled_impl (40,316,865 samples, 0.04%)</title><rect x="606.3" y="277" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="609.28" y="287.5" ></text>
</g>
<g >
<title>void absl::container_internal::HashSetResizeHelper::DeallocateOld&lt;8ul, std::allocator&lt;char&gt; &gt; (78,607,622 samples, 0.08%)</title><rect x="349.3" y="389" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="352.30" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (40,324,600 samples, 0.04%)</title><rect x="413.5" y="357" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="416.45" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator, bool&gt;::pair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::iterator, bool&gt; (361,753,546 samples, 0.37%)</title><rect x="470.8" y="421" width="4.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="473.78" y="431.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt; std::forward_as_tuple&lt;unsigned long const&amp;&gt; (40,370,408 samples, 0.04%)</title><rect x="747.6" y="245" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="750.60" y="255.5" ></text>
</g>
<g >
<title>auto absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;::transfer&lt;std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt; (1,769,825,474 samples, 1.82%)</title><rect x="248.1" y="293" width="21.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="251.12" y="303.5" >a..</text>
</g>
<g >
<title>tick_nohz_highres_handler (40,382,359 samples, 0.04%)</title><rect x="474.2" y="325" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="477.19" y="335.5" ></text>
</g>
<g >
<title>void absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::AssertOnFind&lt;unsigned long&gt; (2,885,275,959 samples, 2.96%)</title><rect x="475.7" y="437" width="34.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="478.65" y="447.5" >vo..</text>
</g>
<g >
<title>absl::container_internal::HeapOrSoo::control (120,309,550 samples, 0.12%)</title><rect x="156.3" y="341" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="159.26" y="351.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;true, true&gt; (120,551,985 samples, 0.12%)</title><rect x="467.4" y="325" width="1.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="470.37" y="335.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (119,993,608 samples, 0.12%)</title><rect x="1042.9" y="421" width="1.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1045.92" y="431.5" ></text>
</g>
<g >
<title>__count_memcg_events (80,682,496 samples, 0.08%)</title><rect x="260.3" y="133" width="1.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="263.29" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (40,367,411 samples, 0.04%)</title><rect x="355.1" y="389" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="358.11" y="399.5" ></text>
</g>
<g >
<title>scheduler_tick (39,610,402 samples, 0.04%)</title><rect x="971.2" y="325" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="974.22" y="335.5" ></text>
</g>
<g >
<title>sync_regs (40,246,917 samples, 0.04%)</title><rect x="1189.5" y="421" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1192.51" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (40,216,278 samples, 0.04%)</title><rect x="1041.0" y="405" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1043.99" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::hash_policy_traits&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, void&gt;::soo_enabled (40,376,211 samples, 0.04%)</title><rect x="448.0" y="357" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="450.96" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::SooEnabled (79,481,643 samples, 0.08%)</title><rect x="57.7" y="405" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="60.68" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::probe (40,171,262 samples, 0.04%)</title><rect x="221.9" y="373" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="224.87" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::control (40,185,594 samples, 0.04%)</title><rect x="749.1" y="309" width="0.5" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="752.07" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::internal_compressed_tuple::Elem&lt;absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;, 0&gt;::type&amp; absl::container_internal::CompressedTuple&lt;absl::container_internal::CommonFields, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::get&lt;0&gt; (40,370,712 samples, 0.04%)</title><rect x="370.7" y="405" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="373.67" y="415.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (160,867,409 samples, 0.17%)</title><rect x="1143.9" y="485" width="1.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1146.88" y="495.5" ></text>
</g>
<g >
<title>scheduler_tick (40,367,411 samples, 0.04%)</title><rect x="355.1" y="277" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="358.11" y="287.5" ></text>
</g>
<g >
<title>update_process_times (40,283,379 samples, 0.04%)</title><rect x="651.0" y="165" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="653.96" y="175.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::common (39,921,563 samples, 0.04%)</title><rect x="396.9" y="389" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="399.92" y="399.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (5,960,059,419 samples, 6.12%)</title><rect x="1063.4" y="357" width="72.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1066.42" y="367.5" >ext4_fil..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (200,761,763 samples, 0.21%)</title><rect x="507.7" y="389" width="2.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="510.68" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::CommonFields::capacity (79,853,517 samples, 0.08%)</title><rect x="478.1" y="389" width="0.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="481.08" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80,356,319 samples, 0.08%)</title><rect x="22.7" y="373" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="25.72" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::AssertIsValidForComparison (40,268,319 samples, 0.04%)</title><rect x="521.7" y="421" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="524.75" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (561,155,410 samples, 0.58%)</title><rect x="888.7" y="485" width="6.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="891.71" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::AssertNotDebugCapacity (280,445,098 samples, 0.29%)</title><rect x="781.6" y="261" width="3.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="784.56" y="271.5" ></text>
</g>
<g >
<title>std::locale::locale (39,759,196 samples, 0.04%)</title><rect x="902.8" y="453" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="905.81" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;unsigned long, unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt; &gt;::fits_in_soo (40,337,593 samples, 0.04%)</title><rect x="790.8" y="277" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="793.76" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::SooControl (80,677,680 samples, 0.08%)</title><rect x="537.3" y="373" width="1.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="540.30" y="383.5" ></text>
</g>
</g>
</svg>
